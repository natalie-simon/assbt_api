var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Accueil.html",[0,1.329,1,1.199]],["body/entities/Accueil.html",[0,1.833,1,2.004,2,1.358,3,0.401,4,0.345,5,0.345,6,2.524,7,0.514,8,2.924,9,2.924,10,1.495,11,2.564,12,1.654,13,0.522,14,1.654,15,2.577,16,4.309,17,4.309,18,0.955,19,0.039,20,1.762,21,1.811,22,3.31,23,3.812,24,1.832,25,3.812,26,3.812,27,1.202,28,3.065,29,2.277,30,2.167,31,2.924,32,4.137,33,3.065,34,3.065,35,3.065,36,0.401,37,3.543,38,2.924,39,1.358,40,2.167,41,1.108,42,0.401,43,0.147,44,0.027,45,0.027]],["title/controllers/AccueilsController.html",[46,1.083,47,1.858]],["body/controllers/AccueilsController.html",[1,2.003,3,0.263,4,0.227,5,0.227,7,0.394,10,1.89,12,1.223,13,0.343,15,2.879,18,0.63,19,0.04,21,1.493,24,1.209,27,0.991,29,2.575,36,0.54,41,1.337,42,0.263,43,0.097,44,0.02,45,0.02,46,1.337,47,1.896,48,0.728,49,1.658,50,1.424,51,3.436,52,1.896,53,1.709,54,1.223,55,1.684,56,2.162,57,2.92,58,3.059,59,3.059,60,2.518,61,1.334,62,1.381,63,2.518,64,2.518,65,1.356,66,3.059,67,3.059,68,2.518,69,4.131,70,2.014,71,2.676,72,2.014,73,2.014,74,2.757,75,3.059,76,2.518,77,1.639,78,1.639,79,3.059,80,2.899,81,1.507,82,1.356,83,2.219,84,2.014,85,3.059,86,2.014,87,4.131,88,2.561,89,2.92,90,3.401,91,3.401,92,2.92,93,1.658,94,2.014,95,2.014,96,3.401,97,2.014,98,2.014,99,2.162,100,1.356,101,1.424,102,1.969,103,3.699,104,1.424,105,2.014,106,2.014,107,1.658,108,0.483,109,1.658,110,2.189,111,2.014,112,1.248,113,2.014,114,0.892,115,0.658,116,0.892,117,1.424,118,0.892,119,1.831,120,2.014,121,2.014,122,2.014,123,2.014,124,2.014,125,2.014,126,2.014,127,2.014,128,2.014,129,2.014]],["title/modules/AccueilsModule.html",[130,1.083,131,1.65]],["body/modules/AccueilsModule.html",[1,1.436,3,0.47,4,0.404,5,0.404,7,0.342,19,0.039,36,0.721,42,0.47,43,0.172,44,0.03,45,0.03,47,3.136,48,1.659,51,3.244,108,0.861,110,2.776,130,1.991,131,3.102,132,1.436,133,1.591,134,1.976,135,1.976,136,1.591,137,2.785,138,1.976,139,2.956,140,2.956,141,2.526,142,1.976,143,1.769,144,3.59,145,3.778,146,2.034,147,1.835,148,2.538,149,1.769,150,3.59,151,3.59,152,2.956,153,2.226,154,3.59]],["title/injectables/AccueilsService.html",[110,1.477,155,1.199]],["body/injectables/AccueilsService.html",[1,2.063,3,0.269,4,0.232,5,0.232,7,0.427,10,1.509,13,0.35,15,2.895,18,0.711,19,0.04,24,1.364,27,1.075,29,2.595,36,0.586,39,0.911,42,0.269,43,0.099,44,0.02,45,0.02,51,3.333,60,2.558,61,1.518,62,1.392,63,2.558,64,2.558,65,1.377,68,2.558,71,2.595,77,1.85,78,1.85,80,2.923,81,2.057,82,2.234,83,2.234,88,2.588,89,2.951,90,3.437,91,3.437,92,2.951,93,2.558,99,2.197,100,2.089,102,1.85,108,0.493,109,1.693,110,1.531,114,1.377,115,1.718,116,2.33,118,0.911,119,1.85,146,1.377,149,1.013,152,1.693,155,1.243,156,1.275,157,1.693,158,3.108,159,3.108,160,4.175,161,1.926,162,2.056,163,3.333,164,2.056,165,3.746,166,3.108,167,2.056,168,1.377,169,3.108,170,2.056,171,3.108,172,2.056,173,3.437,174,2.056,175,1.693,176,2.056,177,1.275,178,1.275,179,2.056,180,2.056,181,2.056,182,2.056,183,2.056,184,2.056]],["title/controllers/AppController.html",[46,1.083,185,1.858]],["body/controllers/AppController.html",[3,0.548,4,0.472,5,0.472,7,0.4,12,2.021,19,0.039,36,0.661,41,1.515,42,0.548,43,0.201,44,0.033,45,0.033,46,1.826,48,1.515,52,3.133,61,1.346,108,1.005,112,2.599,185,3.133,186,3.452,187,4.16]],["title/modules/AppModule.html",[130,1.083,188,1.858]],["body/modules/AppModule.html",[2,2.053,3,0.393,4,0.338,5,0.338,7,0.286,12,1.631,18,0.512,19,0.04,36,0.74,42,0.393,43,0.144,44,0.026,45,0.026,48,1.085,54,1.201,61,1.087,108,0.72,130,1.878,131,2.951,132,1.201,133,1.331,134,1.653,135,1.653,136,1.331,137,2.245,138,1.653,141,2.245,142,1.653,143,1.479,146,1.808,147,1.631,148,2.122,149,1.479,153,2.529,185,2.529,187,3.358,188,3.546,189,2.472,190,2.472,191,2.951,192,2.641,193,3.003,194,3.003,195,4.079,196,3.003,197,3.003,198,3.003,199,3.003,200,3.003,201,2.529,202,3.003,203,2.122,204,3.003,205,2.122,206,3.003,207,3.003,208,3.003,209,3.003,210,3.003,211,3.003,212,3.003,213,3.003,214,1.861,215,3.003,216,3.003,217,3.003,218,3.003,219,1.653,220,3.003,221,3.003,222,2.472]],["title/controllers/AuthController.html",[46,1.083,223,1.858]],["body/controllers/AuthController.html",[3,0.397,4,0.342,5,0.342,7,0.391,13,0.517,18,0.517,19,0.04,21,1.096,24,0.991,27,0.728,36,0.653,41,1.484,42,0.397,43,0.146,44,0.027,45,0.027,46,1.683,48,1.096,50,2.144,52,2.546,53,1.342,54,1.643,55,2.261,56,2.904,61,1.094,62,1.213,65,1.82,74,2.261,77,1.344,78,1.344,80,2.546,83,1.82,101,2.144,102,1.82,104,2.144,107,3.382,108,0.728,112,1.881,114,1.344,115,0.991,116,1.344,117,2.144,118,1.344,119,1.344,168,1.82,223,2.546,224,2.498,225,3.834,226,3.382,227,2.887,228,3.834,229,3.034,230,3.408,231,3.034,232,3.034,233,3.382,234,2.546,235,4.108,236,3.034,237,3.034,238,3.034,239,2.57,240,2.498,241,3.034,242,3.034,243,3.034,244,3.034,245,3.034,246,3.034,247,3.034]],["title/guards/AuthGuard.html",[248,2.119,249,1.858]],["body/guards/AuthGuard.html",[3,0.236,4,0.203,5,0.203,7,0.371,10,1.016,12,1.124,13,0.307,18,0.72,19,0.04,20,0.918,24,1.128,27,0.828,36,0.585,42,0.236,43,0.087,44,0.018,45,0.018,53,1.462,54,1.559,55,1.547,57,1.986,61,1.288,62,1.38,65,1.245,74,1.9,77,1.53,78,1.53,83,1.727,100,1.983,102,1.727,108,0.433,114,1.245,115,1.527,116,1.727,118,0.799,119,1.53,147,1.124,155,1.124,161,1.742,177,2.619,178,2.619,201,1.742,205,1.275,219,1.547,227,2.14,249,1.742,250,1.804,251,1.485,252,2.81,253,2.81,254,2.81,255,2.81,256,3.898,257,3.416,258,3.898,259,3.898,260,1.986,261,3.898,262,2.81,263,1.804,264,3.847,265,4.833,266,1.804,267,2.81,268,2.81,269,4.475,270,2.81,271,2.81,272,2.81,273,1.547,274,2.81,275,3.898,276,1.804,277,2.81,278,4.673,279,1.986,280,3.684,281,2.81,282,3.478,283,2.81,284,2.81,285,2.81,286,2.81,287,4.475,288,1.986,289,2.81,290,2.81,291,2.81,292,2.81,293,2.81,294,4.673,295,1.804,296,2.81,297,4.225,298,2.81,299,2.81,300,2.81,301,4.225,302,2.81,303,2.313,304,2.81,305,3.209,306,1.118,307,1.485,308,1.275,309,1.275,310,1.804,311,1.804,312,1.275,313,1.804,314,1.804,315,2.313,316,1.804,317,1.804,318,1.804,319,1.485,320,1.804,321,3.898,322,1.804,323,1.986,324,1.547,325,1.804,326,2.313,327,1.275,328,1.804,329,1.485,330,1.485,331,1.804,332,1.804,333,1.804,334,1.804]],["title/modules/AuthModule.html",[130,1.083,191,1.65]],["body/modules/AuthModule.html",[3,0.402,4,0.346,5,0.346,7,0.293,19,0.04,36,0.734,42,0.402,43,0.148,44,0.027,45,0.027,48,1.498,108,0.737,130,1.893,132,1.229,133,1.362,134,1.692,135,1.692,136,1.362,137,2.581,138,2.581,141,2.281,142,1.692,143,1.514,146,1.836,147,1.657,153,2.569,191,3.129,192,2.659,201,2.569,205,2.172,219,1.692,223,2.906,225,3.412,239,2.877,240,2.53,249,2.569,306,1.905,308,2.172,329,2.53,330,2.53,335,2.53,336,2.53,337,2.53,338,3.073,339,3.073,340,3.073,341,3.073,342,3.073,343,3.073,344,4.144,345,3.073,346,3.073,347,3.073,348,3.073,349,3.073,350,3.073,351,3.073]],["title/injectables/AuthService.html",[155,1.199,239,1.477]],["body/injectables/AuthService.html",[3,0.314,4,0.27,5,0.27,7,0.391,13,0.409,18,0.594,19,0.04,20,1.63,24,1.139,27,0.836,36,0.589,42,0.314,43,0.115,44,0.023,45,0.023,61,1.49,62,0.709,65,1.545,77,1.545,78,1.545,83,1.545,100,1.545,102,1.996,108,0.576,114,1.545,115,1.723,116,2.419,118,1.545,119,1.064,146,1.996,147,2.058,155,1.394,156,1.488,161,2.161,177,2.161,178,2.544,226,2.87,227,2.544,228,2.87,233,2.87,239,2.219,257,2.464,264,4.341,282,1.977,288,2.464,305,2.87,306,1.488,312,1.697,323,1.697,324,1.322,326,1.977,327,2.464,352,1.977,353,2.401,354,2.281,355,2.401,356,2.161,357,3.486,358,4.782,359,2.401,360,3.486,361,2.479,362,2.901,363,1.471,364,2.901,365,2.901,366,2.401,367,1.977,368,1.697,369,2.401,370,1.977,371,2.401,372,2.401,373,2.401,374,2.401,375,2.401,376,2.401,377,2.401,378,2.401,379,2.401,380,2.401,381,1.819,382,2.401,383,2.401,384,2.401,385,2.401,386,2.401,387,2.401,388,2.401]],["title/classes/CreateAccueilDto.html",[43,0.144,71,1.65]],["body/classes/CreateAccueilDto.html",[1,1.373,3,0.308,4,0.265,5,0.265,7,0.472,13,0.401,14,1.373,16,4.402,17,4.629,18,0.844,19,0.04,20,1.747,21,1.466,27,0.973,36,0.308,42,0.308,43,0.165,44,0.022,45,0.022,53,1.122,61,1.32,62,1.014,71,2.611,81,1.692,82,1.522,92,3.501,115,1.82,168,1.522,234,3.071,273,1.295,389,1.937,390,3.34,391,4.585,392,3.936,393,3.071,394,2.353,395,3.78,396,3.501,397,3.501,398,4.46,399,3.936,400,2.353,401,4.953,402,3.435,403,4.316,404,2.353,405,2.353,406,3.153,407,1.663,408,1.459,409,2.867,410,2.867,411,3.435,412,2.353]],["title/classes/CreateUserDto.html",[43,0.144,413,1.65]],["body/classes/CreateUserDto.html",[3,0.278,4,0.239,5,0.239,7,0.202,10,1.15,13,0.362,14,1.273,18,0.813,19,0.039,20,1.701,21,1.38,27,0.916,36,0.278,42,0.278,43,0.153,44,0.021,45,0.021,53,1.04,54,1.273,61,1.564,62,1.409,81,1.568,82,1.411,88,1.973,115,1.732,147,1.273,168,1.411,214,2.367,234,2.63,273,1.169,279,3.373,303,2.621,361,2.724,362,3.373,363,1.386,364,3.598,365,3.598,392,3.996,393,3.45,395,3.747,396,2.25,397,2.25,399,3.213,406,2.999,407,1.501,408,1.316,409,2.7,410,2.25,413,2.502,414,1.748,415,1.752,416,5.205,417,3.144,418,4.243,419,4.772,420,3.819,421,3.183,422,2.123,423,3.183,424,3.183,425,3.493,426,3.183,427,3.183,428,3.183,429,3.183,430,2.123,431,2.123,432,2.999,433,2.123,434,3.183,435,2.123,436,3.493,437,2.621,438,2.123]],["title/entities/Role.html",[0,1.329,381,1.329]],["body/entities/Role.html",[0,2.01,2,1.562,3,0.461,4,0.397,5,0.397,7,0.336,8,3.206,9,3.206,10,1.639,11,2.812,12,1.814,13,0.601,14,1.814,15,2.761,18,0.902,19,0.039,20,1.482,21,1.639,22,2.492,23,3.206,24,1.73,25,3.206,26,3.206,27,1.088,29,2.497,30,2.492,31,3.206,36,0.461,37,3.206,38,3.206,39,1.562,40,2.492,41,1.274,42,0.461,43,0.169,44,0.029,45,0.029,381,2.347,439,2.902,440,5.015,441,3.734,442,3.526,443,4.536,444,3.526]],["title/classes/SignInDto.html",[43,0.144,230,1.858]],["body/classes/SignInDto.html",[3,0.337,4,0.29,5,0.29,7,0.245,13,0.439,14,1.466,18,0.792,19,0.039,20,1.669,21,1.325,27,0.879,36,0.337,42,0.337,43,0.176,44,0.024,45,0.024,53,1.198,61,1.533,62,1.082,82,1.624,115,1.812,168,1.624,214,2.646,230,2.883,234,2.272,273,1.417,279,3.287,361,3.088,363,1.52,364,3.797,365,3.797,370,3.018,390,2.12,391,4.564,392,3.919,393,3.33,395,3.715,396,2.591,397,2.591,399,3.017,406,3.017,407,1.82,408,1.596,409,2.591,410,2.591,415,2.018,417,2.12,432,3.287,436,3.018,437,3.018,445,2.12,446,2.575,447,3.665,448,2.575,449,3.665,450,2.575,451,2.575,452,3.665,453,2.575,454,2.575]],["title/entities/User.html",[0,1.329,363,0.98]],["body/entities/User.html",[0,1.814,2,1.338,3,0.395,4,0.34,5,0.34,7,0.288,8,2.893,9,2.893,10,1.479,11,2.537,12,1.637,13,0.514,14,1.637,15,2.557,18,0.936,19,0.039,20,1.627,21,1.8,22,2.893,23,3.521,24,1.794,25,3.521,26,3.521,27,1.194,29,2.253,30,2.133,31,2.893,36,0.535,37,3.283,38,2.893,39,1.338,40,2.133,41,1.091,42,0.395,43,0.145,44,0.026,45,0.026,214,3.227,219,2.253,361,2.866,363,1.338,381,2.433,415,2.253,441,3.37,455,2.485,456,4.093,457,3.018,458,4.093,459,3.018,460,3.018,461,3.018,462,3.018,463,4.093,464,4.093,465,3.018]],["title/controllers/UsersController.html",[46,1.083,466,1.858]],["body/controllers/UsersController.html",[3,0.317,4,0.273,5,0.273,7,0.504,10,1.267,13,0.412,18,0.412,19,0.04,21,1.267,24,0.791,27,0.841,36,0.628,41,1.267,42,0.317,43,0.116,44,0.023,45,0.023,46,1.49,48,0.875,50,1.711,52,2.174,53,1.635,54,1.808,55,1.93,56,2.479,57,2.479,62,1.56,65,1.554,74,2.488,76,3.721,77,1.073,78,1.073,80,2.174,81,2.227,82,2.003,83,2.003,96,4.118,99,2.914,100,2.217,101,1.711,102,1.554,104,1.711,108,0.581,112,1.501,114,1.073,115,0.791,116,1.073,117,1.711,118,1.073,119,1.554,168,1.554,260,3.647,324,1.93,354,2.126,356,2.556,363,1.146,413,2.84,415,2.909,466,2.174,467,1.993,468,4.52,469,3.507,470,2.421,471,3.507,472,2.421,473,3.507,474,3.507,475,2.421,476,2.421,477,2.421,478,3.507,479,3.507,480,2.421,481,1.993,482,1.993,483,2.421,484,4.123,485,3.507,486,1.993,487,2.421,488,2.421,489,2.421,490,3.507,491,2.421,492,1.993,493,2.421,494,2.421,495,2.421,496,2.421]],["title/modules/UsersModule.html",[130,1.083,192,1.477]],["body/modules/UsersModule.html",[3,0.456,4,0.392,5,0.392,7,0.332,19,0.039,36,0.714,42,0.456,43,0.167,44,0.029,45,0.029,48,1.627,108,0.835,130,1.972,132,1.393,133,1.544,134,1.918,135,1.918,136,1.544,137,2.745,138,2.745,141,2.478,142,1.918,143,1.716,146,1.995,147,1.8,148,2.462,149,1.716,153,2.16,192,2.802,354,2.637,356,2.79,363,1.138,466,3.091,482,2.868,497,2.868,498,2.868,499,2.868,500,3.484,501,3.484,502,2.868,503,3.484]],["title/injectables/UsersService.html",[155,1.199,354,1.329]],["body/injectables/UsersService.html",[3,0.28,4,0.241,5,0.241,7,0.406,10,0.774,13,0.365,18,0.654,19,0.04,20,1.255,24,1.255,27,1.022,36,0.626,39,0.949,42,0.28,43,0.103,44,0.021,45,0.021,53,1.047,54,1.282,61,1.36,62,1.259,65,1.42,77,1.702,78,1.702,81,2.1,82,2.122,83,2.122,88,1.987,89,2.266,100,1.889,102,1.702,108,0.514,114,1.42,115,1.622,116,2.355,118,0.949,119,1.702,146,1.42,147,1.282,149,1.056,155,1.282,156,1.328,161,1.987,163,3.385,168,1.42,173,2.639,175,1.764,177,1.328,178,1.987,227,2.38,260,3.013,280,1.764,288,2.266,312,2.266,323,2.266,324,1.764,327,1.514,354,1.889,356,1.987,361,2.636,362,2.266,363,0.7,367,1.764,368,1.514,381,1.42,403,1.764,413,2.636,415,2.636,425,1.764,432,2.266,481,1.764,492,1.764,502,1.764,504,1.764,505,3.84,506,4.262,507,3.205,508,2.142,509,2.142,510,3.84,511,3.205,512,2.142,513,2.142,514,3.205,515,3.205,516,3.205,517,3.205,518,2.142,519,3.84,520,2.142,521,2.142,522,2.142,523,2.142,524,2.142,525,2.142,526,2.142,527,2.142,528,2.142,529,2.142,530,2.142,531,2.142,532,3.205,533,2.142,534,2.142,535,2.142,536,2.142,537,2.142,538,2.142,539,2.142,540,3.205,541,2.142]],["title/coverage.html",[542,2.88]],["body/coverage.html",[0,2.132,1,1.293,2,1.433,5,0.364,6,2.663,18,0.551,19,0.039,41,1.169,43,0.231,44,0.028,45,0.028,46,1.851,47,2.005,49,2.663,71,1.78,110,1.593,136,1.433,155,1.923,157,2.663,185,2.005,186,2.663,223,2.005,224,2.663,230,2.005,239,1.593,248,2.286,249,2.005,251,2.663,309,2.286,324,1.78,352,2.663,354,1.433,363,1.057,381,1.433,389,2.663,413,1.78,414,2.663,439,2.663,445,2.663,455,2.663,466,2.005,467,2.663,504,2.663,542,2.286,543,2.663,544,3.234,545,3.234,546,6.035,547,4.288,548,4.81,549,3.234,550,5.674,551,3.234,552,3.53,553,4.81,554,4.81,555,2.663,556,3.234,557,2.663,558,3.234,559,3.234]],["title/dependencies.html",[133,1.596,560,2.068]],["body/dependencies.html",[19,0.04,39,1.678,43,0.228,44,0.031,45,0.031,108,0.908,133,1.678,149,1.866,201,2.348,257,2.677,306,2.348,307,3.118,308,2.677,368,2.677,408,2.348,486,3.118,561,5.185,562,3.787,563,3.787,564,3.787,565,3.787,566,3.787,567,3.787,568,3.787,569,3.787,570,3.787,571,3.787,572,3.787,573,3.787,574,3.787,575,5.185,576,3.787,577,3.787,578,3.787,579,3.787,580,3.787,581,3.787,582,3.787,583,3.787,584,3.787,585,3.787,586,3.787,587,3.787]],["title/miscellaneous/functions.html",[588,1.557,589,2.965]],["body/miscellaneous/functions.html",[12,1.819,13,0.775,19,0.034,44,0.034,45,0.034,53,1.487,136,2.488,555,3.746,588,2.821,589,3.746,590,4.55,591,4.55,592,4.55]],["title/index.html",[13,0.428,593,2.512,594,2.512]],["body/index.html",[4,0.32,7,0.271,19,0.038,44,0.025,45,0.025,143,2.393,163,2.009,222,2.34,542,2.009,543,2.34,595,2.843,596,2.843,597,4.502,598,2.843,599,2.843,600,2.843,601,2.843,602,2.843,603,2.843,604,4.502,605,2.843,606,2.843,607,4.857,608,2.843,609,4.502,610,5.404,611,2.843,612,5.404,613,2.843,614,2.843,615,3.929,616,2.843,617,2.843,618,2.843,619,4.502,620,2.843,621,3.929,622,2.843,623,2.843,624,2.843,625,4.857,626,2.843,627,2.843,628,2.843,629,2.843,630,2.843,631,4.857,632,3.929,633,2.843,634,4.502,635,2.843,636,3.999,637,3.929,638,2.843,639,2.843,640,2.843,641,2.843,642,2.843,643,2.843,644,4.502,645,2.843,646,2.843,647,2.843,648,3.929,649,2.843,650,2.843,651,2.843,652,4.502,653,2.843,654,2.843,655,2.843,656,2.843,657,2.843,658,2.843,659,2.843,660,3.929,661,2.843,662,2.843,663,2.843,664,2.843,665,2.843,666,2.843,667,3.929,668,2.843,669,2.843,670,2.843,671,3.929,672,3.929,673,2.843,674,2.843,675,2.843,676,2.843,677,2.843,678,2.843,679,2.843,680,2.843,681,2.843,682,2.843,683,2.843,684,2.34,685,2.843,686,2.843,687,2.843,688,2.843,689,2.843,690,2.843,691,2.34]],["title/modules.html",[132,1.629]],["body/modules.html",[19,0.034,44,0.034,45,0.034,131,2.42,132,1.758,188,2.726,191,2.42,192,2.166,636,4.71,692,5.721,693,5.721,694,5.721]],["title/overview.html",[695,3.355]],["body/overview.html",[2,1.558,19,0.038,44,0.029,45,0.029,48,1.27,110,2.467,130,1.27,131,3.013,132,1.406,133,1.558,134,1.935,135,1.935,136,1.558,137,1.935,138,1.935,139,2.894,140,2.894,141,2.492,142,1.935,143,1.732,145,4.123,156,2.179,188,3.58,189,2.894,190,2.894,191,3.179,192,2.808,239,2.808,248,2.485,273,1.935,335,2.894,336,2.894,337,2.894,354,2.526,497,2.894,498,2.894,499,2.894,695,2.894,696,4.527,697,3.515]],["title/properties.html",[14,1.44,560,2.068]],["body/properties.html",[7,0.435,14,1.827,19,0.039,44,0.034,45,0.034,684,3.761,691,3.761,698,4.568,699,4.568,700,4.568]],["title/miscellaneous/variables.html",[203,2.545,588,1.557]],["body/miscellaneous/variables.html",[1,1.49,2,2.083,11,2.31,13,0.635,18,0.801,19,0.038,20,1.218,39,1.652,41,1.698,44,0.03,45,0.03,53,1.536,54,2.058,55,2.052,61,1.252,62,1.101,74,2.052,100,1.652,132,1.49,203,2.634,219,2.052,309,3.322,315,3.068,319,3.068,363,1.218,381,1.652,393,2.31,552,3.068,557,3.068,588,2.31,701,3.727,702,4.7,703,5.147,704,5.147,705,4.7,706,3.727,707,3.727,708,4.7,709,3.727,710,3.727,711,3.727,712,3.727,713,3.727,714,3.727,715,3.727,716,3.727,717,3.727,718,3.727,719,3.727]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":699,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":697,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":403,"title":{},"body":{"classes/CreateAccueilDto.html":{},"injectables/UsersService.html":{}}}],["10.0.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["16.4.5",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["2.4.3",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":398,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["200",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["3",{"_index":145,"title":{},"body":{"modules/AccueilsModule.html":{},"overview.html":{}}}],["3.2.3",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":696,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":452,"title":{},"body":{"classes/SignInDto.html":{}}}],["6/6",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":434,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8.1.1",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["8.13.0",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accueil",{"_index":1,"title":{"entities/Accueil.html":{}},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"classes/CreateAccueilDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accueil_id",{"_index":32,"title":{},"body":{"entities/Accueil.html":{}}}],["accueilrepository",{"_index":165,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["accueils",{"_index":51,"title":{},"body":{"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{}}}],["accueils/accueils.module",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["accueilscontroller",{"_index":47,"title":{"controllers/AccueilsController.html":{}},"body":{"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"coverage.html":{}}}],["accueilsmodule",{"_index":131,"title":{"modules/AccueilsModule.html":{}},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accueilsservice",{"_index":110,"title":{"injectables/AccueilsService.html":{}},"body":{"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"coverage.html":{},"overview.html":{}}}],["accéder",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{}}}],["adresse",{"_index":447,"title":{},"body":{"classes/SignInDto.html":{}}}],["ajout",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":677,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('users",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":185,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":648,"title":{},"body":{"index.html":{}}}],["applications",{"_index":603,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":188,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["au",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["aucun",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.guard",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":223,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":249,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":191,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":684,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authservice",{"_index":239,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoris",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{}}}],["aux",{"_index":57,"title":{},"body":{"controllers/AccueilsController.html":{},"guards/AuthGuard.html":{},"controllers/UsersController.html":{}}}],["avec",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":678,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('cet",{"_index":534,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('la",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["base",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.comparesync(pass",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hashsync(createuserdto.password",{"_index":529,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bigint",{"_index":31,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["board",{"_index":670,"title":{},"body":{"index.html":{}}}],["body",{"_index":101,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["body(new",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["booléen",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":136,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":694,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":692,"title":{},"body":{"modules.html":{}}}],["bto",{"_index":79,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["building",{"_index":598,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["caractères",{"_index":399,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["caractères'})@isnotempty({message",{"_index":420,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caractères.'})@isnotempty({message",{"_index":450,"title":{},"body":{"classes/SignInDto.html":{}}}],["catch",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{}}}],["ce",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cela",{"_index":58,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["chaine",{"_index":419,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["champ",{"_index":391,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/SignInDto.html":{}}}],["channel",{"_index":639,"title":{},"body":{"index.html":{}}}],["charger",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["chaîne",{"_index":449,"title":{},"body":{"classes/SignInDto.html":{}}}],["check",{"_index":625,"title":{},"body":{"index.html":{}}}],["cl",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":43,"title":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"overview.html":{}}}],["clef",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["club",{"_index":425,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["cluster_accueilsmodule",{"_index":139,"title":{},"body":{"modules/AccueilsModule.html":{},"overview.html":{}}}],["cluster_accueilsmodule_providers",{"_index":140,"title":{},"body":{"modules/AccueilsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":497,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":498,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":499,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":37,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column({type",{"_index":22,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["come",{"_index":628,"title":{},"body":{"index.html":{}}}],["compte",{"_index":537,"title":{},"body":{"injectables/UsersService.html":{}}}],["connection",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["connexion",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignInDto.html":{}}}],["console.log",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('userservice",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(`tentative",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(createuserdto",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["const",{"_index":178,"title":{},"body":{"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructeur",{"_index":114,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":161,"title":{},"body":{"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(accueilrepository",{"_index":162,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["constructor(jwtservice",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":117,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["constructor(userrepository",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["contactez",{"_index":527,"title":{},"body":{"injectables/UsersService.html":{}}}],["contenir",{"_index":396,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["context",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.getclass",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.gethandler",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contexte",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controle",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":46,"title":{"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('accueils",{"_index":113,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["controller('auth",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller/auth.controller",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers",{"_index":48,"title":{},"body":{"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers/accueils.controller",{"_index":150,"title":{},"body":{"modules/AccueilsModule.html":{}}}],["controlleur",{"_index":52,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["correpond",{"_index":59,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["correspondant",{"_index":80,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["courses",{"_index":646,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":542,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createaccueil",{"_index":158,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["createaccueil(createaccueildto",{"_index":166,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["createaccueildto",{"_index":71,"title":{"classes/CreateAccueilDto.html":{}},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"classes/CreateAccueilDto.html":{},"coverage.html":{}}}],["createaccueils",{"_index":66,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["createaccueils(@body",{"_index":126,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["createaccueils(createaccueildto",{"_index":70,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["createuser",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":413,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.clef",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":528,"title":{},"body":{"injectables/UsersService.html":{}}}],["création",{"_index":81,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["créer",{"_index":75,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["d'accueil",{"_index":64,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["d'authentication",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{}}}],["d'authentification",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["d'entrée",{"_index":592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["d'environnement",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["d'exécution",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{}}}],["d'inscription",{"_index":423,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["d'un",{"_index":82,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dans",{"_index":11,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":61,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":135,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["decorators/public.decorators",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{}}}],["deeper",{"_index":641,"title":{},"body":{"index.html":{}}}],["default",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":105,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["delete('delete/:id",{"_index":85,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["deleteaccueil",{"_index":67,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["deleteaccueil(@param('id",{"_index":128,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["deleteaccueil(id",{"_index":84,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["deleteaccueilbyid",{"_index":159,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["deleteaccueilbyid(id",{"_index":169,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["dependencies",{"_index":133,"title":{"dependencies.html":{}},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":100,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["devtools",{"_index":654,"title":{},"body":{"index.html":{}}}],["discord",{"_index":638,"title":{},"body":{"index.html":{}}}],["dive",{"_index":640,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":543,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doit",{"_index":392,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["données",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotenv",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["dto",{"_index":168,"title":{},"body":{"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/createuser.dto",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["du",{"_index":147,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["décorateur",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["déj",{"_index":536,"title":{},"body":{"injectables/UsersService.html":{}}}],["e2e",{"_index":622,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":599,"title":{},"body":{"index.html":{}}}],["email",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["enregistrer",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{}}}],["enterprise",{"_index":659,"title":{},"body":{"index.html":{}}}],["entier",{"_index":90,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["entit",{"_index":8,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Accueil.html":{},"modules/AppModule.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":0,"title":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["entités",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["est",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UsersService.html":{}}}],["et",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["example",{"_index":609,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{}}}],["existinguser",{"_index":532,"title":{},"body":{"injectables/UsersService.html":{}}}],["experience",{"_index":643,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":42,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":138,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["extracttokenfromheader",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extrait",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{}}}],["false",{"_index":26,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["few",{"_index":626,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findaccueilbyid",{"_index":68,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["findaccueilbyid(@param('id",{"_index":122,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["findaccueilbyid(id",{"_index":93,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["findallaccueil",{"_index":160,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["findallusers",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["follow",{"_index":663,"title":{},"body":{"index.html":{}}}],["fournie",{"_index":424,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":597,"title":{},"body":{"index.html":{}}}],["full",{"_index":658,"title":{},"body":{"index.html":{}}}],["function",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":589,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["garde",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gestion",{"_index":146,"title":{},"body":{"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["get(':id",{"_index":121,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["get()@apioperation({summary",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{}}}],["getaccueils",{"_index":69,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["getting",{"_index":593,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":468,"title":{},"body":{"controllers/UsersController.html":{}}}],["global",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{}}}],["graph",{"_index":649,"title":{},"body":{"index.html":{}}}],["grow",{"_index":674,"title":{},"body":{"index.html":{}}}],["guard",{"_index":248,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handlers",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hands",{"_index":642,"title":{},"body":{"index.html":{}}}],["handy",{"_index":629,"title":{},"body":{"index.html":{}}}],["header",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{}}}],["help",{"_index":656,"title":{},"body":{"index.html":{}}}],["here",{"_index":682,"title":{},"body":{"index.html":{}}}],["host",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{}}}],["httpcode",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":688,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":15,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["identifier",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":16,"title":{},"body":{"entities/Accueil.html":{},"classes/CreateAccueilDto.html":{}}}],["implements",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{}}}],["import",{"_index":36,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":153,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["incorrect",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["incorrecte",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indiquant",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["informations",{"_index":60,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["injectable",{"_index":155,"title":{"injectables/AccueilsService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":156,"title":{},"body":{"injectables/AccueilsService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":175,"title":{},"body":{"injectables/AccueilsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(accueil",{"_index":176,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["injectrepository(user",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["inscriptions",{"_index":428,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["installcompile",{"_index":611,"title":{},"body":{"index.html":{}}}],["interact",{"_index":650,"title":{},"body":{"index.html":{}}}],["invalide",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["is_public_key",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":437,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isnotempty",{"_index":406,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isnotempty({message",{"_index":390,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/SignInDto.html":{}}}],["ispublic",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":436,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isstring({message",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["jeton",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{}}}],["jetons",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{}}}],["job",{"_index":667,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":669,"title":{},"body":{"index.html":{}}}],["join",{"_index":680,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":464,"title":{},"body":{"entities/User.html":{}}}],["jwt",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwtmodule",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":685,"title":{},"body":{"index.html":{}}}],["l'accueil",{"_index":92,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"classes/CreateAccueilDto.html":{}}}],["l'accès",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{}}}],["l'application",{"_index":12,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"entities/Role.html":{},"entities/User.html":{},"miscellaneous/functions.html":{}}}],["l'authentification",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["l'email",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["l'ensemble",{"_index":99,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/UsersController.html":{}}}],["l'id",{"_index":91,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["l'importation",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l'utilisateur",{"_index":432,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"injectables/UsersService.html":{}}}],["l\\'ensemble",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{}}}],["la",{"_index":62,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["le",{"_index":115,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["learn",{"_index":633,"title":{},"body":{"index.html":{}}}],["legend",{"_index":134,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["les",{"_index":54,"title":{},"body":{"controllers/AccueilsController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":691,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":672,"title":{},"body":{"index.html":{}}}],["ligne",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["limiter",{"_index":427,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["linkedin",{"_index":665,"title":{},"body":{"index.html":{}}}],["liste",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{}}}],["liées",{"_index":56,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["local",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["logging",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["looking",{"_index":666,"title":{},"body":{"index.html":{}}}],["loop",{"_index":661,"title":{},"body":{"index.html":{}}}],["manipuler",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{}}}],["manquant",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{}}}],["manytoone",{"_index":463,"title":{},"body":{"entities/User.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":461,"title":{},"body":{"entities/User.html":{}}}],["matching",{"_index":45,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["memberof",{"_index":409,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["membre",{"_index":429,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":395,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["metadata",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":65,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minimum",{"_index":401,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["minlength",{"_index":407,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["minlength(10",{"_index":411,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["minlength(20",{"_index":412,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["minlength(6",{"_index":454,"title":{},"body":{"classes/SignInDto.html":{}}}],["minlength(8",{"_index":438,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":588,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":671,"title":{},"body":{"index.html":{}}}],["mode",{"_index":615,"title":{},"body":{"index.html":{}}}],["models/typeorm",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":130,"title":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":132,"title":{"modules.html":{}},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["moins",{"_index":397,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["more",{"_index":634,"title":{},"body":{"index.html":{}}}],["mot",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["myśliwiec",{"_index":686,"title":{},"body":{"index.html":{}}}],["métadonnées",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["name",{"_index":24,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":655,"title":{},"body":{"index.html":{}}}],["nest",{"_index":604,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":690,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":631,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":108,"title":{},"body":{"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":149,"title":{},"body":{"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newaccueil",{"_index":179,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["newuser",{"_index":530,"title":{},"body":{"injectables/UsersService.html":{}}}],["node.js",{"_index":596,"title":{},"body":{"index.html":{}}}],["non",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{}}}],["nouvel",{"_index":76,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/UsersController.html":{}}}],["npm",{"_index":610,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":25,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["number",{"_index":29,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["number(process.env.db_port",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["offer",{"_index":668,"title":{},"body":{"index.html":{}}}],["official",{"_index":644,"title":{},"body":{"index.html":{}}}],["open",{"_index":673,"title":{},"body":{"index.html":{}}}],["optional",{"_index":78,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ou",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["out",{"_index":143,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":695,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":560,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":63,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["par",{"_index":88,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["param",{"_index":102,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":77,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":103,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["part",{"_index":657,"title":{},"body":{"index.html":{}}}],["pass",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["passe",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["passport",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"entities/User.html":{}}}],["payload",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["permet",{"_index":426,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["permettant",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{}}}],["peut",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":637,"title":{},"body":{"index.html":{}}}],["point",{"_index":591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["port",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["possède",{"_index":535,"title":{},"body":{"injectables/UsersService.html":{}}}],["post",{"_index":104,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('create",{"_index":124,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["post('create')@usepipes(validationpipe",{"_index":72,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["post('register",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('signin",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["pour",{"_index":53,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":50,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":38,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn({type",{"_index":30,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["principal",{"_index":187,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["private",{"_index":177,"title":{},"body":{"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["process.env.clef",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["process.env.db_host",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_secret",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["process.env.node_env",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":617,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":595,"title":{},"body":{"index.html":{}}}],["project",{"_index":607,"title":{},"body":{"index.html":{}}}],["promise",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"entities/Accueil.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"properties.html":{}}}],["protégée",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{}}}],["provide",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":137,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["présent",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{}}}],["public",{"_index":41,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get",{"_index":97,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["public()@get(':id",{"_index":94,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["public()@httpcode(httpstatus.ok)@post('signin",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register')@apioperation({summary",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["publique",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["publiques",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["questions",{"_index":635,"title":{},"body":{"index.html":{}}}],["qui",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["read",{"_index":681,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":118,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":651,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{}}}],["register",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{}}}],["registeruser",{"_index":469,"title":{},"body":{"controllers/UsersController.html":{}}}],["registeruser(@body",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["registeruser(createuserdto",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{}}}],["regroupant",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relations",{"_index":540,"title":{},"body":{"injectables/UsersService.html":{}}}],["renseign",{"_index":410,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["renseigné'})@isemail",{"_index":430,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["renseigné'})@minlength(8",{"_index":433,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["renseigné.'})@isemail",{"_index":446,"title":{},"body":{"classes/SignInDto.html":{}}}],["renseigné.'})@minlength(10",{"_index":402,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["renseigné.'})@minlength(20",{"_index":394,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["renseigné.'})@minlength(6",{"_index":451,"title":{},"body":{"classes/SignInDto.html":{}}}],["renseignée",{"_index":421,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["repository",{"_index":163,"title":{},"body":{"injectables/AccueilsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["représentant",{"_index":9,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["request",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requête",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":142,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":627,"title":{},"body":{"index.html":{}}}],["results",{"_index":44,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":119,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":83,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":381,"title":{"entities/Role.html":{}},"body":{"injectables/AuthService.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":465,"title":{},"body":{"entities/User.html":{}}}],["role_id",{"_index":441,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["role_name",{"_index":443,"title":{},"body":{"entities/Role.html":{}}}],["rolename",{"_index":440,"title":{},"body":{"entities/Role.html":{}}}],["route",{"_index":74,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":55,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":612,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["récupère",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["récupération",{"_index":173,"title":{},"body":{"injectables/AccueilsService.html":{},"injectables/UsersService.html":{}}}],["récupérer",{"_index":96,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/UsersController.html":{}}}],["scalable",{"_index":600,"title":{},"body":{"index.html":{}}}],["schema",{"_index":40,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["secret",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["server",{"_index":601,"title":{},"body":{"index.html":{}}}],["service",{"_index":116,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["services/accueils.service",{"_index":151,"title":{},"body":{"modules/AccueilsModule.html":{}}}],["services/auth.service",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["services/users.service",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["setmetadata(is_public_key",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":608,"title":{},"body":{"index.html":{}}}],["si",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{}}}],["side",{"_index":602,"title":{},"body":{"index.html":{}}}],["signin",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(email",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(signindto",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":230,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signindto.password",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplifier",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sinon",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{}}}],["son",{"_index":89,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":676,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorators.ts",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.ts",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/accueils/accueils.module.ts",{"_index":144,"title":{},"body":{"modules/AccueilsModule.html":{}}}],["src/accueils/controllers/accueils.controller.ts",{"_index":49,"title":{},"body":{"controllers/AccueilsController.html":{},"coverage.html":{}}}],["src/accueils/controllers/accueils.controller.ts:35",{"_index":98,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/controllers/accueils.controller.ts:46",{"_index":95,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/controllers/accueils.controller.ts:57",{"_index":73,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/controllers/accueils.controller.ts:67",{"_index":86,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/dtos/accueil.dtos",{"_index":109,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["src/accueils/dtos/accueil.dtos.ts",{"_index":389,"title":{},"body":{"classes/CreateAccueilDto.html":{},"coverage.html":{}}}],["src/accueils/dtos/accueil.dtos.ts:17",{"_index":405,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["src/accueils/dtos/accueil.dtos.ts:29",{"_index":400,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["src/accueils/dtos/accueil.dtos.ts:41",{"_index":404,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["src/accueils/services/accueils.service",{"_index":111,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/services/accueils.service.ts",{"_index":157,"title":{},"body":{"injectables/AccueilsService.html":{},"coverage.html":{}}}],["src/accueils/services/accueils.service.ts:11",{"_index":164,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/accueils/services/accueils.service.ts:26",{"_index":167,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/accueils/services/accueils.service.ts:35",{"_index":174,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/accueils/services/accueils.service.ts:44",{"_index":172,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/accueils/services/accueils.service.ts:55",{"_index":170,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/app.controller.ts",{"_index":186,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.guard.ts",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:21",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:38",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:70",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/controller/auth.controller.ts",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controller/auth.controller.ts:33",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/decorators/public.decorators",{"_index":112,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorators/public.decorators.ts",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/signin.dto",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/dtos/signin.dto.ts",{"_index":445,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dtos/signin.dto.ts:15",{"_index":448,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dtos/signin.dto.ts:30",{"_index":453,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/services/auth.service.ts",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts:10",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:28",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":555,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/accueil.entity",{"_index":152,"title":{},"body":{"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{}}}],["src/models/accueil.entity.ts",{"_index":6,"title":{},"body":{"entities/Accueil.html":{},"coverage.html":{}}}],["src/models/accueil.entity.ts:14",{"_index":33,"title":{},"body":{"entities/Accueil.html":{}}}],["src/models/accueil.entity.ts:21",{"_index":35,"title":{},"body":{"entities/Accueil.html":{}}}],["src/models/accueil.entity.ts:28",{"_index":28,"title":{},"body":{"entities/Accueil.html":{}}}],["src/models/accueil.entity.ts:35",{"_index":34,"title":{},"body":{"entities/Accueil.html":{}}}],["src/models/role.entity.ts",{"_index":439,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/models/role.entity.ts:14",{"_index":442,"title":{},"body":{"entities/Role.html":{}}}],["src/models/role.entity.ts:21",{"_index":444,"title":{},"body":{"entities/Role.html":{}}}],["src/models/typeorm.ts",{"_index":557,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/user.entity",{"_index":502,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/models/user.entity.ts",{"_index":455,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/models/user.entity.ts:21",{"_index":459,"title":{},"body":{"entities/User.html":{}}}],["src/models/user.entity.ts:29",{"_index":457,"title":{},"body":{"entities/User.html":{}}}],["src/models/user.entity.ts:36",{"_index":460,"title":{},"body":{"entities/User.html":{}}}],["src/models/user.entity.ts:40",{"_index":462,"title":{},"body":{"entities/User.html":{}}}],["src/users/dtos/createuser.dto.ts",{"_index":414,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/createuser.dto.ts:16",{"_index":431,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:29",{"_index":435,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:41",{"_index":422,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/services/users.service",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/services/users.service.ts",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/services/users.service.ts:12",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:28",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:51",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:62",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":467,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:32",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:50",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":500,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":613,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":616,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":618,"title":{},"body":{"index.html":{}}}],["started",{"_index":594,"title":{"index.html":{}},"body":{}}],["starter",{"_index":606,"title":{},"body":{"index.html":{}}}],["statements",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{}}}],["stay",{"_index":660,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"entities/Accueil.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["summary",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{}}}],["support",{"_index":636,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suppression",{"_index":171,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["supprimer",{"_index":87,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["svg",{"_index":693,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["sécuriser",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{}}}],["table",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":621,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":624,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":623,"title":{},"body":{"index.html":{}}}],["tests",{"_index":619,"title":{},"body":{"index.html":{}}}],["text",{"_index":23,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["thanks",{"_index":675,"title":{},"body":{"index.html":{}}}],["this.accueilrepository.create(createaccueildto",{"_index":180,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilrepository.delete(id",{"_index":184,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilrepository.find",{"_index":182,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilrepository.findone",{"_index":183,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilrepository.save(newaccueil",{"_index":181,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilsservice.createaccueil(createaccueildto",{"_index":127,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["this.accueilsservice.deleteaccueilbyid(id",{"_index":129,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["this.accueilsservice.findaccueilbyid(id",{"_index":123,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["this.accueilsservice.findallaccueil",{"_index":120,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["this.authservice.signin(signindto.email",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.extracttokenfromheader(request",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.findonebyemail(createuserdto.email",{"_index":533,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.userrepository.create(createuserdto",{"_index":531,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":541,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":539,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(newuser",{"_index":538,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findallusers",{"_index":496,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["throws",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":652,"title":{},"body":{"index.html":{}}}],["titre",{"_index":17,"title":{},"body":{"entities/Accueil.html":{},"classes/CreateAccueilDto.html":{}}}],["token",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{}}}],["touch",{"_index":683,"title":{},"body":{"index.html":{}}}],["tous",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["tout",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{}}}],["toutes",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["tre",{"_index":393,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{}}}],["twitter",{"_index":689,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":39,"title":{},"body":{"entities/Accueil.html":{},"injectables/AccueilsService.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":148,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([accueil",{"_index":154,"title":{},"body":{"modules/AccueilsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":503,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":605,"title":{},"body":{"index.html":{}}}],["un",{"_index":10,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["unauthorizedexception('email",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{}}}],["une",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["unique",{"_index":456,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":620,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["unlicensed",{"_index":700,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":662,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{}}}],["usepipes",{"_index":106,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["usepipes(validationpipe",{"_index":125,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["user",{"_index":363,"title":{"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.role?.rolename",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":458,"title":{},"body":{"entities/User.html":{}}}],["username",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":501,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":466,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":192,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":354,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":653,"title":{},"body":{"index.html":{}}}],["utilis",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilisateur",{"_index":415,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["utilisateurs",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["utilisateurs'})@apiresponse({status",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{}}}],["utilise",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{}}}],["validation",{"_index":418,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validationpipe",{"_index":107,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{}}}],["validator",{"_index":408,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["valide",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateUserDto.html":{}}}],["value",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":203,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":698,"title":{},"body":{"properties.html":{}}}],["video",{"_index":645,"title":{},"body":{"index.html":{}}}],["visit",{"_index":632,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":647,"title":{},"body":{"index.html":{}}}],["vérifie",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{}}}],["vérifier",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{}}}],["watch",{"_index":614,"title":{},"body":{"index.html":{}}}],["website",{"_index":687,"title":{},"body":{"index.html":{}}}],["working",{"_index":630,"title":{},"body":{"index.html":{}}}],["x",{"_index":664,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":679,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":141,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Accueil.html":{"url":"entities/Accueil.html","title":"entity - Accueil","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Accueil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/accueil.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Entité représentant un Accueil dans l'application.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                titre\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'description', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/accueil.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'bigint', name: 'accueil_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/accueil.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'image', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/accueil.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'titre', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/accueil.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * Entité représentant un Accueil dans l'application.\n */\n@Entity({\n  schema: 'public',\n})\nexport class Accueil {\n  @PrimaryGeneratedColumn({\n    type: 'bigint',\n    name: 'accueil_id',\n  })\n  id: number;\n\n  @Column({\n    type: 'text',\n    name: 'titre',\n    nullable: false,\n  })\n  titre: string;\n\n  @Column({\n    type: 'text',\n    name: 'description',\n    nullable: false,\n  })\n  description: string;\n\n  @Column({\n    type: 'text',\n    name: 'image',\n    nullable: false,\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccueilsController.html":{"url":"controllers/AccueilsController.html","title":"controller - AccueilsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccueilsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accueils/controllers/accueils.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accueils\n            \n\n\n            \n                Description\n            \n            \n                Accueils controller\nControlleur pour les routes liées aux accueils\nCela correpond aux informations de la page d'accueil de l'application\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createAccueils\n                            \n                            \n                                    \n                                deleteAccueil\n                            \n                            \n                                    \n                                    \n                                findAccueilById\n                            \n                            \n                                    \n                                    \n                                getAccueils\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createAccueils\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccueils(createAccueilDto: CreateAccueilDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@UsePipes(ValidationPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/accueils/controllers/accueils.controller.ts:57\n                        \n                    \n\n\n            \n                \n                        Route pour créer un nouvel accueil\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createAccueilDto\n                                            \n                                                            CreateAccueilDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La BTO correspondant à la création d'un accueil\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAccueil\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAccueil(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/accueils/controllers/accueils.controller.ts:67\n                        \n                    \n\n\n            \n                \n                        Route pour supprimer un accueil par son id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Un entier correspondant à l'id de l'accueil à supprimer\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAccueilById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAccueilById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/accueils/controllers/accueils.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Route pour récupérer un accueil par son id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Un Entier correspondant à l'id de l'accueil\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getAccueils\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccueils()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/accueils/controllers/accueils.controller.ts:35\n                        \n                    \n\n\n            \n                \n                        Route pour récupérer l'ensemble des accueils\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseIntPipe,\n  Post,\n  Delete,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateAccueilDto } from 'src/accueils/dtos/accueil.dtos';\nimport { AccueilsService } from 'src/accueils/services/accueils.service';\nimport { Public } from 'src/auth/decorators/public.decorators';\n\n/**\n * Accueils controller\n * Controlleur pour les routes liées aux accueils\n * Cela correpond aux informations de la page d'accueil de l'application\n */\n@Controller('accueils')\nexport class AccueilsController {\n  /**\n   * Constructeur\n   * @param accueilsService Le service AccueilsService\n   */\n  constructor(private readonly accueilsService: AccueilsService) {}\n\n  /**\n   * Route pour récupérer l'ensemble des accueils\n   * @returns\n   */\n  @Public()\n  @Get()\n  getAccueils() {\n    return this.accueilsService.findAllAccueil();\n  }\n\n  /**\n   * Route pour récupérer un accueil par son id\n   * @param id Un Entier correspondant à l'id de l'accueil\n   * @returns \n   */\n  @Public()\n  @Get(':id')\n  findAccueilById(@Param('id', ParseIntPipe) id: number) {\n    return this.accueilsService.findAccueilById(id);\n  }\n\n  /**\n   * Route pour créer un nouvel accueil\n   * @param createAccueilDto La BTO correspondant à la création d'un accueil\n   * @returns\n   */\n  @Post('create')\n  @UsePipes(ValidationPipe)\n  createAccueils(@Body() createAccueilDto: CreateAccueilDto) {\n    return this.accueilsService.createAccueil(createAccueilDto);\n  }\n\n  /**\n   * Route pour supprimer un accueil par son id\n   * @param id Un entier correspondant à l'id de l'accueil à supprimer\n   * @returns\n   */\n  @Delete('delete/:id')\n  deleteAccueil(@Param('id', ParseIntPipe) id: number) {\n    return this.accueilsService.deleteAccueilById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccueilsModule.html":{"url":"modules/AccueilsModule.html","title":"module - AccueilsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccueilsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccueilsModule\n\n\n\ncluster_AccueilsModule_providers\n\n\n\n\nAccueilsService\n\nAccueilsService\n\n\n\nAccueilsModule\n\nAccueilsModule\n\nAccueilsModule -->\n\nAccueilsService->AccueilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accueils/accueils.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            3\nGestion du module Accueils\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccueilsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccueilsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccueilsController } from './controllers/accueils.controller';\nimport { AccueilsService } from './services/accueils.service';\nimport { Accueil } from 'src/models/accueil.entity';\n\n/**3\n * Gestion du module Accueils\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([Accueil])],\n  controllers: [AccueilsController],\n  providers: [AccueilsService],\n})\nexport class AccueilsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccueilsService.html":{"url":"injectables/AccueilsService.html","title":"injectable - AccueilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccueilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accueils/services/accueils.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service de gestion des Accueils (informations de la page d'accueil)\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAccueil\n                            \n                            \n                                deleteAccueilById\n                            \n                            \n                                findAccueilById\n                            \n                            \n                                findAllAccueil\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accueilRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accueils/services/accueils.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructeur\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        accueilRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Le repository des Accueils\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAccueil\n                        \n                    \n                \n            \n            \n                \ncreateAccueil(createAccueilDto: CreateAccueilDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accueils/services/accueils.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Le service de création d'un Accueil\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createAccueilDto\n                                            \n                                                            CreateAccueilDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La DTO correspondant à la création d'un Accueil\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccueilById\n                        \n                    \n                \n            \n            \n                \ndeleteAccueilById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accueils/services/accueils.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Le service de suppression d'un Accueil par son id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Un Entier correspondant à l'id de l'Accueil\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAccueilById\n                        \n                    \n                \n            \n            \n                \nfindAccueilById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accueils/services/accueils.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Le service de récupération d'un Accueil par son id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Un Entier correspondant à l'id de l'Accueil\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllAccueil\n                        \n                    \n                \n            \n            \n                \nfindAllAccueil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/accueils/services/accueils.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Le service de récupération de l'ensemble des Accueils\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Accueil } from 'src/models/accueil.entity';\nimport { Repository } from 'typeorm';\nimport { CreateAccueilDto } from 'src/accueils/dtos/accueil.dtos';\n\n/**\n * Service de gestion des Accueils (informations de la page d'accueil)\n */\n@Injectable()\nexport class AccueilsService {\n  /**\n   * Constructeur\n   * @param accueilRepository Le repository des Accueils\n   */\n  constructor(\n    @InjectRepository(Accueil)\n    private readonly accueilRepository: Repository,\n  ) {}\n\n  /**\n   * Le service de création d'un Accueil\n   * @param createAccueilDto La DTO correspondant à la création d'un Accueil\n   * @returns\n   */\n  createAccueil(createAccueilDto: CreateAccueilDto) {\n    const newAccueil = this.accueilRepository.create(createAccueilDto);\n    return this.accueilRepository.save(newAccueil);\n  }\n\n  /**\n   * Le service de récupération de l'ensemble des Accueils\n   * @returns\n   */\n  findAllAccueil() {\n    return this.accueilRepository.find();\n  }\n\n  /**\n   * Le service de récupération d'un Accueil par son id\n   * @param id Un Entier correspondant à l'id de l'Accueil\n   * @returns\n   */\n  findAccueilById(id: number) {\n    return this.accueilRepository.findOne({\n      where: { id: id },\n    });\n  }\n\n  /**\n   * Le service de suppression d'un Accueil par son id\n   * @param id Un Entier correspondant à l'id de l'Accueil\n   * @returns\n   */\n  deleteAccueilById(id: number) {\n    return this.accueilRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controlleur principal de l'application\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { Public } from 'src/auth/decorators/public.decorators';\n\n/**\n * Controlleur principal de l'application\n */\n@Controller()\nexport class AppController {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAccueilsModule\n\nAccueilsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccueilsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Gestion du module principal de l'application\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccueilsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\n//import { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccueilsModule } from './accueils/accueils.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport entities from './models/typeorm';\nimport * as dotenv from 'dotenv';\n\n// Charger les variables d'environnement\ndotenv.config();\n/**\n * Gestion du module principal de l'application\n */\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST,\n      port: Number(process.env.DB_PORT),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      entities: entities,\n      synchronize: true,\n      logging: process.env.NODE_ENV === 'development',\n    }),\n    AccueilsModule,\n    UsersModule,\n    AuthModule,\n  ],\n  //controllers: [AppController],\n  //providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                Auth controller\nControlleur pour les routes liées à l'authentification\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controller/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n                        Route de connection\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    la DTO correspondant au login\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { AuthService } from '../services/auth.service';\nimport { SignInDto } from 'src/auth/dtos/signin.dto';\nimport { Public } from 'src/auth/decorators/public.decorators';\n\n/**\n * Auth controller\n * Controlleur pour les routes liées à l'authentification\n */\n@Controller('auth')\nexport class AuthController {\n  /**\n   * Constructeur\n   * @param authService Le service AuthService\n   */\n  constructor(private readonly authService: AuthService) {}\n\n  /**\n   * Route de connection\n   * @param signInDto la DTO correspondant au login\n   * @returns\n   */\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signIn(\n    @Body(new ValidationPipe())\n    signInDto: SignInDto,\n  ) {\n    return this.authService.signIn(signInDto.email, signInDto.password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                     Garde d'authentication pour sécuriser les routes de l'application\n Utilise des jetons JWT pour vérifier l'accès des utilisateurs\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guard.ts:21\n                            \n                        \n\n                \n                    \n                            Constructeur\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service permettant de manipuler et vérifier les jetons JWT\n\n                                                        \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service pour accéder aux métadonnées des handlers et classes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:38\n                        \n                    \n\n\n            \n                \n                        Vérifie si une route est accessible ou protégée\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le contexte d'exécution de la requête\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Un booléen indiquant si l'accès est autorisé ou non\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:70\n                        \n                    \n\n\n            \n                \n                        Extrait le jeton JWT du header 'Authorization' de la requête\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La requête HTTP\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                Le jeton JWT si présent et valide, sinon undefined\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport * as dotenv from 'dotenv';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from './decorators/public.decorators';\n\ndotenv.config();\n\n/**\n *  Garde d'authentication pour sécuriser les routes de l'application\n *\n *  Utilise des jetons JWT pour vérifier l'accès des utilisateurs\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /**\n   * Constructeur\n   * @param jwtService Service permettant de manipuler et vérifier les jetons JWT\n   * @param reflector  Service pour accéder aux métadonnées des handlers et classes\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    private reflector: Reflector,\n  ) {}\n\n  /**\n   * Vérifie si une route est accessible ou protégée\n   * @param context Le contexte d'exécution de la requête\n   * @returns Un booléen indiquant si l'accès est autorisé ou non\n   * @throws UnauthorizedException si le jeton est manquant ou invalide\n   */\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      // La route est publique\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: process.env.JWT_SECRET,\n      });\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n\n    return true;\n  }\n\n  /**\n   * Extrait le jeton JWT du header 'Authorization' de la requête\n   * @param request La requête HTTP\n   * @returns Le jeton JWT si présent et valide, sinon undefined\n   */\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Gestion du module Auth\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './services/auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './controller/auth.controller';\nimport { AuthGuard } from './auth.guard';\nimport * as dotenv from 'dotenv';\nimport { APP_GUARD } from '@nestjs/core';\ndotenv.config();\n\n/**\n * Gestion du module Auth\n */\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.register({\n      global: true,\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '1d' },\n    }),\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service de gestion de l'authentification\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructeur du service AuthService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                le service des Users\n\n                                                        \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                le service de gestion du JWT\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Le service de connection & d'authentification\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    l'email du User\n\n                                            \n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    le mot de passe\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from 'src/users/services/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcryptjs';\n\n/**\n * Service de gestion de l'authentification\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Constructeur du service AuthService\n   * @param usersService le service des Users\n   * @param jwtService  le service de gestion du JWT\n   */\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  /**\n   * Le service de connection & d'authentification\n   * @param email l'email du User\n   * @param pass  le mot de passe\n   * @returns\n   * @throws UnauthorizedException\n   */\n  async signIn(email: string, pass: string): Promise {\n    console.log(`Tentative de connexion avec l'email: ${email} ${pass}`); // Ajout du console.log à la ligne 14 //\n    const user = await this.usersService.findOneByEmail(email);\n    if (!user || !bcrypt.compareSync(pass, user.password)) {\n      throw new UnauthorizedException('Email ou mot de passe incorrect');\n    }\n\n    const role = user?.role?.roleName ?? 'aucun';\n\n    const payload = {\n      sub: user.id,\n      email: user.email,\n      role: role,\n    };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccueilDto.html":{"url":"classes/CreateAccueilDto.html","title":"class - CreateAccueilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccueilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accueils/dtos/accueil.dtos.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO pour la création d'un accueil\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                titre\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Le champ titre doit être renseigné.'})@MinLength(20, {message: 'Le champ titre doit contenir au moins 20 caractères.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accueils/dtos/accueil.dtos.ts:29\n                        \n                    \n\n            \n                \n                    Description de l'accueil (minimum 20 caractères)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Le champ image doit être renseigné.'})@MinLength(10, {message: 'Le champ image doit contenir au moins 10 caractères.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accueils/dtos/accueil.dtos.ts:41\n                        \n                    \n\n            \n                \n                    Image de l'accueil (minimum 10 caractères)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Le champ titre doit être renseigné.'})@MinLength(10, {message: 'Le champ titre doit contenir au moins 10 caractères.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accueils/dtos/accueil.dtos.ts:17\n                        \n                    \n\n            \n                \n                    Titre de l'accueil (minimum 10 caractères)\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MinLength } from 'class-validator';\n\n/**\n * DTO pour la création d'un accueil\n */\nexport class CreateAccueilDto {\n  /**\n   * Titre de l'accueil (minimum 10 caractères)\n   *\n   * @type {string}\n   * @memberof CreateAccueilDto\n   */\n  @IsNotEmpty({ message: 'Le champ titre doit être renseigné.' })\n  @MinLength(10, {\n    message: 'Le champ titre doit contenir au moins 10 caractères.',\n  })\n  titre: string;\n\n  /**\n   * Description de l'accueil (minimum 20 caractères)\n   *\n   * @type {string}\n   * @memberof CreateAccueilDto\n   */\n  @IsNotEmpty({ message: 'Le champ titre doit être renseigné.' })\n  @MinLength(20, {\n    message: 'Le champ titre doit contenir au moins 20 caractères.',\n  })\n  description: string;\n\n  /**\n   * Image de l'accueil (minimum 10 caractères)\n   *\n   * @type {string}\n   * @memberof CreateAccueilDto\n   */\n  @IsNotEmpty({ message: 'Le champ image doit être renseigné.' })\n  @MinLength(10, {\n    message: 'Le champ image doit contenir au moins 10 caractères.',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/createuser.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO pour la création d'un utilisateur\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                clef\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Le clef de validation doit être une chaine de caractères'})@IsNotEmpty({message: 'La clef de validation doit être renseignée'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createuser.dto.ts:41\n                        \n                    \n\n            \n                \n                    La clef d'inscription (fournie par le club)\npermet de limiter les inscriptions au membre du club\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'L'email doit être une chaine de caractères'})@IsNotEmpty({message: 'L'email doit être renseigné'})@IsEmail({}, {message: 'L'email doit être un email valide'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createuser.dto.ts:16\n                        \n                    \n\n            \n                \n                    Email de l'utilisateur (User)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Le mot de passe doit être une chaine de caractères'})@IsNotEmpty({message: 'Le mot de passe doit être renseigné'})@MinLength(8, {message: 'Le mot de passe doit contenir au moins 8 caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createuser.dto.ts:29\n                        \n                    \n\n            \n                \n                    Mot de passe de l'utilisateur (User)\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, MinLength, IsEmail } from 'class-validator';\n\n/**\n * DTO pour la création d'un utilisateur\n */\nexport class CreateUserDto {\n  /**\n   * Email de l'utilisateur (User)\n   *\n   * @type {string}\n   * @memberof CreateUserDto\n   */\n  @IsString({ message: \"L'email doit être une chaine de caractères\" })\n  @IsNotEmpty({ message: \"L'email doit être renseigné\" })\n  @IsEmail({}, { message: \"L'email doit être un email valide\" })\n  email: string;\n\n  /**\n   * Mot de passe de l'utilisateur (User)\n   *\n   * @type {string}\n   * @memberof CreateUserDto\n   */\n  @IsString({ message: 'Le mot de passe doit être une chaine de caractères' })\n  @IsNotEmpty({ message: 'Le mot de passe doit être renseigné' })\n  @MinLength(8, {\n    message: 'Le mot de passe doit contenir au moins 8 caractères',\n  })\n  password: string;\n\n  /**\n   * La clef d'inscription (fournie par le club)\n   * permet de limiter les inscriptions au membre du club\n   * @type {string}\n   * @memberof CreateUserDto\n   */\n  @IsString({\n    message: 'Le clef de validation doit être une chaine de caractères',\n  })\n  @IsNotEmpty({ message: 'La clef de validation doit être renseignée' })\n  clef: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/role.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Entité représentant un role dans l'application.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                roleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'bigint', name: 'role_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/role.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'role_name', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * Entité représentant un role dans l'application.\n */\n@Entity({\n  schema: 'public',\n})\nexport class Role {\n  @PrimaryGeneratedColumn({\n    type: 'bigint',\n    name: 'role_id',\n  })\n  id: number;\n\n  @Column({\n    type: 'text',\n    name: 'role_name',\n    nullable: false,\n  })\n  roleName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/signin.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO pour la connexion d'un utilisateur\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Le champ email doit être renseigné.'})@IsEmail({}, {message: 'Le champ email doit être une adresse email.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:15\n                        \n                    \n\n            \n                \n                    Email de l'utilisateur (User)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Le champ mot de passe doit être une chaîne de caractères.'})@IsNotEmpty({message: 'Le champ mot de passe doit être renseigné.'})@MinLength(6, {message: 'Le champ mot de passe doit contenir au moins 6 caractères.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:30\n                        \n                    \n\n            \n                \n                    Mot de passe de l'utilisateur (User)\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, MinLength, IsEmail } from 'class-validator';\n\n/**\n * DTO pour la connexion d'un utilisateur\n */\nexport class SignInDto {\n  /**\n   * Email de l'utilisateur (User)\n   *\n   * @type {string}\n   * @memberof SignInDto\n   */\n  @IsNotEmpty({ message: 'Le champ email doit être renseigné.' })\n  @IsEmail({}, { message: 'Le champ email doit être une adresse email.' })\n  email: string;\n\n  /**\n   * Mot de passe de l'utilisateur (User)\n   *\n   * @type {string}\n   * @memberof SignInDto\n   */\n  @IsString({\n    message: 'Le champ mot de passe doit être une chaîne de caractères.',\n  })\n  @IsNotEmpty({ message: 'Le champ mot de passe doit être renseigné.' })\n  @MinLength(6, {\n    message: 'Le champ mot de passe doit contenir au moins 6 caractères.',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Entité représentant un utilisateur dans l'application.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'email', unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'bigint', name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'password', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'role_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Role } from './role.entity';\n\n/**\n * Entité représentant un utilisateur dans l'application.\n */\n@Entity({\n  schema: 'public',\n})\nexport class User {\n  @PrimaryGeneratedColumn({\n    type: 'bigint',\n    name: 'user_id',\n  })\n  id: number;\n\n  @Column({\n    type: 'text',\n    name: 'email',\n    unique: true,\n    nullable: false,\n  })\n  email: string;\n\n  @Column({\n    type: 'text',\n    name: 'password',\n    nullable: false,\n  })\n  password: string;\n\n  @ManyToOne(() => Role)\n  @JoinColumn({ name: 'role_id' })\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n            \n                Description\n            \n            \n                Users controller\nControlleur pour les routes liées aux utilisateurs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Récupérer tout les utilisateur', description: 'Récupérer l'ensemble des utilisateurs'})@ApiResponse({status: 200, description: 'Liste des utilisateurs'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:50\n                        \n                    \n\n\n            \n                \n                        Route pour la récupérer l'ensemble des utilisateurs\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ApiOperation({summary: 'Register a new user', description: 'Enregistrer un nouvel utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:32\n                        \n                    \n\n\n            \n                \n                        Route pour la création d'un nouvel utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La DTO correspondant à la création d'un utilisateur\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Get } from '@nestjs/common';\nimport { CreateUserDto } from './dtos/createuser.dto';\nimport { UsersService } from './services/users.service';\nimport { Public } from 'src/auth/decorators/public.decorators';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n\n/**\n * Users controller\n * Controlleur pour les routes liées aux utilisateurs\n */\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  /**\n   * Constructeur\n   * @param usersService Le service UsersService\n   */\n  constructor(private readonly usersService: UsersService) {}\n\n  /**\n   * Route pour la création d'un nouvel utilisateur\n   * @param createUserDto La DTO correspondant à la création d'un utilisateur\n   * @returns\n   */\n  @Public()\n  @Post('register')\n  @ApiOperation({\n    summary: 'Register a new user',\n    description: 'Enregistrer un nouvel utilisateur',\n  })\n  registerUser(@Body() createUserDto: CreateUserDto) {\n    console.log(createUserDto);\n    return this.usersService.createUser(createUserDto);\n  }\n\n  /**\n   * Route pour la récupérer l'ensemble des utilisateurs\n   * @returns\n   */\n  @Get()\n  @ApiOperation({\n    summary: 'Récupérer tout les utilisateur',\n    description: 'Récupérer l\\'ensemble des utilisateurs',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Liste des utilisateurs',\n  })\n  getUsers() {\n    return this.usersService.findAllUsers();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Gestion du module Users\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './services/users.service';\nimport { User } from 'src/models/user.entity';\n\n\n/**\n * Gestion du module Users\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service de gestion des utilisateurs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                findAllUsers\n                            \n                            \n                                findOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructeur du service UsersService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                le repository des Users\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Le service de création d'un utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La DTO pour la création d'un utilisateur\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \nfindAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Service qui récupère tous les utilisateurs\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \nfindOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Le service de récupération d'un utilisateur par son email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    L'email de l'utilisateur\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from 'src/models/user.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../dtos/createuser.dto';\nimport * as bcrypt from 'bcryptjs';\n\n/**\n * Service de gestion des utilisateurs\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * Constructeur du service UsersService\n   * @param userRepository le repository des Users\n   */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  /**\n   * Le service de création d'un utilisateur\n   * @param createUserDto La DTO pour la création d'un utilisateur\n   * @returns\n   * @throws BadRequestException\n   */\n  async createUser(createUserDto: CreateUserDto) {\n    console.log('userservice createuser');\n    console.log(createUserDto);\n    \n    /*if (createUserDto.clef !== process.env.CLEF) {\n      throw new BadRequestException('La clé est incorrecte, contactez le club');\n    }\n    createUserDto.password = bcrypt.hashSync(createUserDto.password, 10);\n    //const newUser = this.userRepository.create(createUserDto);\n    //const existingUser = await this.findOneByEmail(createUserDto.email);\n    /*if (existingUser) {\n      throw new BadRequestException('Cet email possède déjà un compte');\n    }\n\n    return this.userRepository.save(newUser);*/\n  }\n\n  /**\n   * Le service de récupération d'un utilisateur par son email\n   * @param email L'email de l'utilisateur\n   * @returns\n   * @throws BadRequestException\n   */\n  findOneByEmail(email: string): Promise {\n    return this.userRepository.findOne({\n      where: { email },\n      relations: ['role'],\n    });\n  }\n\n  /**\n   * Service qui récupère tous les utilisateurs\n   * @returns\n   */\n  findAllUsers() {\n    return this.userRepository.find({ relations: ['role'] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/accueils/controllers/accueils.controller.ts\n            \n            controller\n            AccueilsController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/accueils/dtos/accueil.dtos.ts\n            \n            class\n            CreateAccueilDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/accueils/services/accueils.service.ts\n            \n            injectable\n            AccueilsService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/auth/decorators/public.decorators.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/public.decorators.ts\n            \n            variable\n            Public\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/signin.dto.ts\n            \n            class\n            SignInDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/models/accueil.entity.ts\n            \n            entity\n            Accueil\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/models/role.entity.ts\n            \n            entity\n            Role\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/models/typeorm.ts\n            \n            variable\n            entities\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/models/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/dtos/createuser.dto.ts\n            \n            class\n            CreateUserDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/users/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^8.1.1\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.5\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.13.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        Point d'entrée pour l'application\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccueilsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccueilsModule\n\n\n\ncluster_AccueilsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAccueilsService\n\nAccueilsService\n\n\n\nAccueilsModule\n\nAccueilsModule\n\nAccueilsModule -->\n\nAccueilsService->AccueilsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccueilsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            entities   (src/.../typeorm.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorators.ts)\n                        \n                        \n                            Public   (src/.../public.decorators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/typeorm.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Accueil, User, Role]\n                    \n                \n\n            \n                \n                    Tableau regroupant toutes les entités de la base de données.\nCe tableau peut être utilisé pour simplifier l'importation des entités\ndans les modules TypeORM.\n\n                \n            \n\n        \n    \n\n    src/auth/decorators/public.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n            \n                \n                    Décorateur pour les routes publiques\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n            \n                \n                    Controle route publique\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
