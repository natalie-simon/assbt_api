var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Accueil.html",[0,1.329,1,1.477]],["body/entities/Accueil.html",[0,1.683,1,2.343,2,1.2,3,0.354,4,0.305,5,0.305,6,2.23,7,2.301,8,3.799,9,2.091,10,2.355,11,3.799,12,0.461,13,1.519,14,2.415,15,4.123,16,4.123,17,0.927,18,0.039,19,1.697,20,1.719,21,3.101,22,3.67,23,1.778,24,3.67,25,3.67,26,1.141,27,2.708,28,2.091,29,1.914,30,2.685,31,3.799,32,2.708,33,2.708,34,2.708,35,0.354,36,3.362,37,2.685,38,1.334,39,1.914,40,0.979,41,0.354,42,0.13,43,0.025,44,0.025]],["title/controllers/AccueilsController.html",[45,1.083,46,1.858]],["body/controllers/AccueilsController.html",[3,0.34,4,0.293,5,0.293,12,0.443,14,2.571,17,0.731,18,0.039,20,1.688,23,1.402,26,1.12,28,2.821,35,0.611,40,1.551,41,0.34,42,0.125,43,0.024,44,0.024,45,0.94,46,2.288,47,0.94,48,2.141,49,1.838,50,2.6,51,1.636,52,3.691,53,3.691,54,3.039,55,4.671,56,2.6,57,2.821,58,2.6,59,2.6,60,1.902,61,1.902,62,2.07,63,2.6,64,3.691,65,2.6,66,2.141,67,2.6,68,2.6,69,2.6,70,2.6,71,1.838,72,2.6,73,4.291,74,1.838,75,2.6,76,2.6,77,2.141,78,0.624,79,2.141,80,2.114,81,2.6,82,1.612,83,2.6,84,1.838,85,1.152,86,2.07,87,2.6,88,2.6,89,2.6,90,2.6,91,2.6,92,2.6,93,2.6,94,2.6,95,2.6,96,2.6]],["title/modules/AccueilsModule.html",[97,1.083,98,1.65]],["body/modules/AccueilsModule.html",[1,1.69,3,0.449,4,0.386,5,0.386,18,0.039,35,0.71,41,0.449,42,0.165,43,0.029,44,0.029,46,3.068,47,1.61,78,0.823,80,2.743,97,1.789,98,3.064,99,1.52,100,1.52,101,1.888,102,1.888,103,1.52,104,2.725,105,1.888,106,2.824,107,2.824,108,2.453,109,1.888,110,1.69,111,3.43,112,2.424,113,1.69,114,3.43,115,3.43,116,2.824,117,2.126,118,3.43]],["title/injectables/AccueilsService.html",[80,1.477,119,1.199]],["body/injectables/AccueilsService.html",[1,1.293,3,0.343,4,0.295,5,0.295,12,0.447,14,2.582,17,0.799,18,0.04,23,1.533,26,1.187,28,2.829,35,0.647,38,1.293,41,0.343,42,0.126,43,0.024,44,0.024,51,1.647,54,3.059,57,2.725,60,2.079,61,2.079,62,2.079,66,3.059,78,0.629,79,2.161,80,1.831,85,1.163,86,2.079,113,1.293,116,2.161,119,1.486,120,1.627,121,2.161,122,3.716,123,3.716,124,4.69,125,2.303,126,2.625,127,3.315,128,2.625,129,3.716,130,3.716,131,2.625,132,3.716,133,2.625,134,2.625,135,2.625,136,2.161,137,2.625,138,1.627,139,1.627,140,2.625,141,2.625,142,2.625,143,2.625,144,2.625,145,2.625]],["title/controllers/AppController.html",[45,1.083,146,1.858]],["body/controllers/AppController.html",[3,0.551,4,0.474,5,0.474,18,0.039,35,0.663,40,1.522,41,0.551,42,0.202,43,0.033,44,0.033,45,1.831,47,1.522,78,1.01,82,2.611,146,3.141,147,3.468]],["title/modules/AppModule.html",[97,1.083,148,1.858]],["body/modules/AppModule.html",[2,1.954,3,0.358,4,0.308,5,0.308,17,0.466,18,0.039,35,0.725,41,0.358,42,0.131,43,0.025,44,0.025,47,1.382,78,0.656,97,1.594,98,2.867,99,1.212,100,1.212,101,1.505,102,1.505,103,1.212,104,2.105,105,1.505,108,2.105,109,1.505,110,1.347,112,1.933,113,1.347,117,2.371,146,2.734,148,3.481,149,2.251,150,2.251,151,2.867,152,2.566,153,2.734,154,2.734,155,3.824,156,2.734,157,2.734,158,2.734,159,2.734,160,2.734,161,2.371,162,2.734,163,1.933,164,1.933,165,2.734,166,1.933,167,2.734,168,2.734,169,2.734,170,2.734,171,2.734,172,2.734,173,2.734,174,2.734,175,1.695,176,2.734,177,2.734,178,2.734,179,2.734,180,1.505,181,2.734,182,2.734,183,2.251]],["title/controllers/AuthController.html",[45,1.083,184,1.858]],["body/controllers/AuthController.html",[3,0.423,4,0.364,5,0.364,12,0.551,17,0.551,18,0.039,20,1.169,23,1.057,26,0.776,35,0.67,40,1.549,41,0.423,42,0.155,43,0.028,44,0.028,45,1.169,47,1.169,49,2.286,51,1.9,60,1.433,61,1.433,62,1.433,71,2.286,74,2.286,77,3.53,78,0.776,82,2.005,84,2.286,85,1.433,86,1.433,184,2.658,185,2.662,186,3.234,187,2.982,188,3.96,189,3.234,190,3.395,191,3.234,192,3.234,193,2.662,194,3.234,195,3.234,196,2.37,197,2.662,198,3.234,199,3.234,200,3.234,201,3.234,202,3.234,203,3.234,204,3.234]],["title/guards/AuthGuard.html",[205,2.119,206,1.858]],["body/guards/AuthGuard.html",[3,0.293,4,0.253,5,0.253,12,0.382,17,0.793,18,0.04,19,1.084,23,1.289,26,0.946,35,0.637,41,0.293,42,0.108,43,0.021,44,0.021,51,1.47,60,1.749,61,1.749,62,1.47,78,0.538,85,0.994,86,1.749,119,1.326,125,2.056,138,2.884,139,2.884,161,2.056,166,1.586,180,1.826,187,2.446,206,2.056,207,2.243,208,1.847,209,4.359,210,3.317,211,2.243,212,4.009,213,5.038,214,2.243,215,3.317,216,4.359,217,2.243,218,2.243,219,2.344,220,3.317,221,4.87,222,2.243,223,3.946,224,3.248,225,1.391,226,1.847,227,1.586,228,1.586,229,2.243,230,2.243,231,2.73,232,2.243,233,2.243,234,2.243,235,2.243,236,2.243,237,2.243,238,2.243,239,4.359,240,2.243,241,2.344,242,1.826,243,2.243,244,2.73,245,1.586,246,2.243,247,1.847,248,1.847,249,2.243,250,2.243,251,2.243,252,2.243]],["title/modules/AuthModule.html",[97,1.083,151,1.65]],["body/modules/AuthModule.html",[3,0.366,4,0.315,5,0.315,18,0.04,35,0.718,41,0.366,42,0.134,43,0.025,44,0.025,47,1.404,78,0.671,97,1.613,99,1.24,100,1.24,101,1.54,102,1.54,103,1.24,104,2.457,105,2.457,108,2.139,109,1.54,110,1.378,117,2.409,151,3.067,152,2.584,161,2.409,166,1.977,180,1.54,184,2.767,196,2.832,197,2.303,206,2.409,225,1.734,227,1.977,247,2.303,248,2.303,253,2.303,254,2.303,255,2.303,256,2.797,257,2.797,258,2.797,259,2.797,260,2.797,261,2.797,262,3.885,263,2.797,264,2.797,265,2.797,266,2.797,267,2.797,268,2.797,269,2.797]],["title/injectables/AuthService.html",[119,1.199,196,1.477]],["body/injectables/AuthService.html",[3,0.337,4,0.29,5,0.29,9,2.019,10,1.597,12,0.439,17,0.625,18,0.039,19,1.669,23,1.198,26,0.879,35,0.608,41,0.337,42,0.124,43,0.024,44,0.024,51,1.625,60,1.625,61,1.625,62,1.142,78,0.618,85,1.625,86,1.142,119,1.466,120,1.597,125,2.273,138,2.273,139,2.647,187,2.647,188,3.019,196,1.807,212,4.328,219,2.592,224,2.121,225,1.597,241,1.821,242,1.418,244,2.121,245,2.592,270,2.121,271,2.577,272,2.264,273,2.577,274,3.667,275,4.652,276,2.577,277,2.35,278,2.577,279,2.121,280,1.821,281,2.577,282,2.577,283,2.577,284,2.121,285,2.577,286,2.577,287,2.577,288,2.577,289,2.577,290,1.466,291,2.577,292,2.577,293,2.577,294,2.577,295,2.577,296,1.821,297,1.821,298,2.577,299,1.892,300,2.577,301,2.577,302,2.577,303,2.577,304,2.577,305,2.577,306,2.577]],["title/classes/CreateAccueilDto.html",[42,0.144,57,1.65]],["body/classes/CreateAccueilDto.html",[3,0.317,4,0.273,5,0.273,7,1.828,12,0.413,13,1.403,15,4.249,16,4.561,17,0.703,18,0.038,19,1.635,20,1.491,26,0.989,35,0.317,41,0.317,42,0.169,43,0.023,44,0.023,57,1.931,307,1.502,308,1.994,309,3.396,310,3.472,311,4.611,312,3.959,313,3.537,314,2.422,315,3.807,316,3.537,317,3.537,318,3.537,319,3.508,320,3.537,321,2.422,322,3.508,323,3.723,324,2.422,325,2.422,326,3.196,327,1.712,328,1.502,329,2.916,330,3.508,331,2.422]],["title/classes/CreateUserDto.html",[42,0.144,332,1.65]],["body/classes/CreateUserDto.html",[3,0.286,4,0.246,5,0.246,9,3.127,10,2.017,12,0.372,13,1.301,17,0.662,18,0.038,19,1.576,20,1.404,26,0.932,35,0.286,41,0.286,42,0.156,43,0.021,44,0.021,175,2.409,277,2.533,284,3.971,296,3.41,297,3.41,307,1.355,310,3.182,312,4.016,313,3.955,315,3.774,316,2.299,317,2.299,318,2.299,320,3.253,326,3.042,327,1.545,328,1.355,329,2.299,332,1.791,333,1.799,334,4.996,335,3.199,336,4.304,337,3.971,338,4.824,339,3.886,340,3.253,341,2.186,342,2.186,343,2.299,344,3.253,345,2.186,346,2.186,347,2.678,348,2.186,349,3.544,350,2.678,351,2.186]],["title/entities/Role.html",[0,1.329,299,1.329]],["body/entities/Role.html",[0,1.959,2,1.502,3,0.443,4,0.382,5,0.382,12,0.577,13,1.768,14,2.709,17,0.889,18,0.039,19,1.445,20,1.598,21,2.395,22,3.125,23,1.704,24,3.125,25,3.125,26,1.06,28,2.434,29,2.395,30,3.125,35,0.443,36,3.125,37,3.125,38,1.67,39,2.395,40,1.225,41,0.443,42,0.163,43,0.029,44,0.029,299,1.959,352,2.79,353,4.921,354,3.64,355,3.389,356,4.421,357,3.389]],["title/classes/SignInDto.html",[42,0.144,190,1.858]],["body/classes/SignInDto.html",[3,0.333,4,0.287,5,0.287,9,2.948,12,0.434,13,1.454,17,0.62,18,0.038,19,1.512,20,1.314,26,0.872,35,0.333,41,0.333,42,0.175,43,0.024,44,0.024,175,2.629,190,2.254,277,3.001,296,3.597,297,3.597,307,1.578,309,2.096,310,3.428,311,4.553,312,3.909,313,3.786,315,3.703,316,2.57,317,2.57,318,2.57,320,2.998,326,2.998,327,1.8,328,1.578,329,2.57,335,2.096,337,3.809,347,2.993,349,2.993,350,2.993,358,2.096,359,2.546,360,3.636,361,2.546,362,3.636,363,2.546,364,2.546,365,2.546,366,2.546]],["title/entities/User.html",[0,1.329,290,1.199]],["body/entities/User.html",[0,1.71,2,1.228,3,0.362,4,0.312,5,0.312,12,0.472,13,1.543,14,2.445,17,0.914,18,0.039,19,1.569,20,1.736,21,2.728,22,3.395,23,1.753,24,3.395,25,3.395,26,1.152,28,2.124,29,1.958,30,2.728,35,0.505,36,3.139,37,2.728,38,1.365,39,1.958,40,1.001,41,0.362,42,0.133,43,0.025,44,0.025,175,3.131,180,2.124,277,2.78,290,1.543,299,2.378,354,3.177,367,2.28,368,3.859,369,2.77,370,3.859,371,2.77,372,2.77,373,2.77,374,2.77,375,3.859,376,3.859,377,2.77]],["title/controllers/UsersController.html",[45,1.083,378,1.858]],["body/controllers/UsersController.html",[3,0.302,4,0.26,5,0.26,7,2.254,12,0.394,17,0.394,18,0.039,20,1.225,23,0.755,26,0.813,35,0.616,40,1.225,41,0.302,42,0.111,43,0.022,44,0.022,45,0.835,47,0.835,49,1.633,51,1.502,60,1.024,61,1.024,62,1.502,71,1.633,74,1.633,78,0.554,82,1.432,84,1.633,85,1.024,86,1.502,163,3.126,242,1.866,272,1.779,290,1.355,332,2.709,343,3.126,378,2.101,379,1.902,380,4.014,381,3.389,382,4.922,383,3.389,384,4.422,385,3.389,386,2.31,387,4.922,388,2.79,389,4.052,390,4.014,391,4.052,392,2.31,393,3.389,394,3.389,395,3.877,396,2.31,397,4.422,398,2.31,399,2.31,400,3.389,401,3.389,402,4.422,403,2.31,404,3.389,405,1.902,406,1.902,407,2.31,408,4.014,409,3.389,410,1.902,411,2.31,412,2.31,413,2.31,414,3.389,415,2.31,416,2.31,417,2.31,418,2.31,419,2.31]],["title/modules/UsersModule.html",[97,1.083,152,1.477]],["body/modules/UsersModule.html",[3,0.406,4,0.349,5,0.349,7,1.376,10,2.586,18,0.039,35,0.688,41,0.406,42,0.149,43,0.027,44,0.027,47,1.508,78,0.744,97,1.9,99,1.376,100,1.376,101,1.709,102,1.709,103,1.376,104,2.594,105,2.594,108,2.296,109,1.709,110,1.529,112,2.194,113,1.529,117,1.924,152,2.725,272,2.592,290,1.884,378,2.921,406,2.555,420,2.555,421,2.555,422,2.555,423,3.104,424,3.434,425,4.172,426,4.172,427,3.104,428,2.555,429,3.104]],["title/injectables/UsersService.html",[119,1.199,272,1.329]],["body/injectables/UsersService.html",[3,0.264,4,0.227,5,0.227,7,0.895,9,2.759,12,0.344,17,0.631,18,0.039,19,1.211,23,1.211,26,0.992,35,0.612,38,0.995,41,0.264,42,0.097,43,0.02,44,0.02,51,1.358,60,1.642,61,1.642,62,1.642,78,0.484,85,0.895,86,1.642,113,0.995,119,1.226,120,1.252,125,1.9,127,2.924,136,1.662,138,1.252,139,1.9,163,2.924,187,2.297,193,1.662,219,2.167,241,2.167,242,1.687,245,1.427,272,1.358,277,2.448,279,1.662,280,1.427,290,0.807,299,1.358,310,1.252,323,1.662,332,2.448,343,2.619,388,2.524,389,3.405,391,2.524,395,3.405,405,1.662,424,2.524,428,1.662,430,1.662,431,5.012,432,3.065,433,3.065,434,3.065,435,4.137,436,3.065,437,2.019,438,2.019,439,3.065,440,3.065,441,3.065,442,2.019,443,3.065,444,3.065,445,2.019,446,3.065,447,3.065,448,2.019,449,3.065,450,3.065,451,3.065,452,3.065,453,2.019,454,2.019,455,2.019,456,2.019,457,2.019,458,2.019,459,2.019,460,2.019,461,2.019,462,2.019,463,2.019,464,2.019,465,2.019,466,2.019,467,3.065,468,2.019,469,2.019,470,2.019,471,2.019,472,2.019,473,2.019,474,2.019,475,3.065,476,2.019]],["title/coverage.html",[477,2.88]],["body/coverage.html",[0,2.003,1,1.411,2,1.269,5,0.322,6,2.357,17,0.488,18,0.039,40,1.035,42,0.217,43,0.026,44,0.026,45,1.761,46,1.775,48,2.357,57,1.576,80,1.411,103,1.269,119,1.807,121,2.357,146,1.775,147,2.357,184,1.775,185,2.357,190,1.775,196,1.411,205,2.024,206,1.775,208,2.357,228,2.024,242,1.576,270,2.357,272,1.269,290,1.145,299,1.269,308,2.357,332,1.576,333,2.357,352,2.357,358,2.357,367,2.357,378,1.775,379,2.357,430,2.357,477,2.024,478,2.357,479,2.863,480,2.863,481,5.88,482,2.863,483,4.52,484,2.863,485,5.415,486,2.863,487,3.251,488,4.52,489,3.949,490,2.357,491,2.863,492,4.52,493,2.863,494,2.357,495,2.863,496,2.863,497,2.863,498,2.863]],["title/dependencies.html",[100,1.596,499,2.068]],["body/dependencies.html",[18,0.04,38,1.718,42,0.216,43,0.029,44,0.029,78,0.836,100,1.545,113,1.718,161,2.161,225,2.161,226,2.87,227,2.464,280,2.464,328,2.161,410,2.87,500,4.989,501,3.486,502,3.486,503,3.486,504,3.486,505,3.486,506,3.486,507,3.486,508,3.486,509,3.486,510,3.486,511,3.486,512,3.486,513,3.486,514,4.989,515,3.486,516,3.486,517,3.486,518,3.486,519,3.486,520,3.486,521,3.486,522,3.486,523,3.486,524,3.486,525,3.486,526,3.486,527,3.486]],["title/miscellaneous/functions.html",[528,1.557,529,2.965]],["body/miscellaneous/functions.html",[12,0.771,18,0.034,43,0.034,44,0.034,103,2.483,490,3.727,528,2.806,529,3.727,530,4.526]],["title/index.html",[12,0.428,531,2.512,532,2.512]],["body/index.html",[4,0.276,7,1.086,18,0.037,43,0.023,44,0.023,110,2.24,127,1.732,183,2.017,477,1.732,478,2.017,533,2.45,534,2.45,535,4.152,536,2.45,537,2.45,538,2.45,539,2.45,540,2.45,541,2.45,542,4.152,543,2.45,544,2.45,545,4.546,546,2.45,547,4.152,548,5.179,549,2.45,550,5.179,551,2.45,552,2.45,553,3.538,554,2.45,555,2.45,556,2.45,557,4.152,558,2.45,559,3.538,560,2.45,561,2.45,562,2.45,563,4.546,564,2.45,565,2.45,566,2.45,567,2.45,568,2.45,569,4.546,570,3.538,571,2.45,572,4.152,573,2.45,574,3.743,575,3.538,576,2.45,577,2.45,578,2.45,579,2.45,580,2.45,581,2.45,582,4.152,583,2.45,584,2.45,585,2.45,586,3.538,587,2.45,588,2.45,589,2.45,590,4.152,591,2.45,592,2.45,593,2.45,594,2.45,595,2.45,596,2.45,597,2.45,598,3.538,599,2.45,600,2.45,601,2.45,602,2.45,603,2.45,604,2.45,605,3.538,606,2.45,607,2.45,608,2.45,609,3.538,610,3.538,611,2.45,612,2.45,613,2.45,614,2.45,615,2.45,616,2.45,617,2.45,618,2.45,619,2.45,620,2.45,621,2.45,622,2.017,623,2.45,624,2.45,625,2.45,626,2.45,627,2.45,628,2.45,629,2.017]],["title/modules.html",[99,1.806]],["body/modules.html",[18,0.033,43,0.033,44,0.033,98,2.33,99,1.876,148,2.624,151,2.33,152,2.086,574,4.651,630,5.65,631,5.65,632,5.65]],["title/overview.html",[633,3.355]],["body/overview.html",[2,1.406,18,0.038,43,0.027,44,0.027,47,1.147,80,2.348,97,1.147,98,2.915,99,1.406,100,1.406,101,1.747,102,1.747,103,1.406,104,1.747,105,1.747,106,2.613,107,2.613,108,2.331,109,1.747,110,1.564,120,1.967,148,3.502,149,2.613,150,2.613,151,3.11,152,2.74,196,2.74,205,2.243,253,2.613,254,2.613,255,2.613,272,2.465,307,1.967,420,2.613,421,2.613,422,2.613,633,2.613,634,4.234,635,4.765,636,3.174]],["title/properties.html",[13,1.44,499,2.068]],["body/properties.html",[7,1.974,13,1.782,18,0.038,43,0.034,44,0.034,622,3.668,629,3.668,637,4.455,638,4.455,639,4.455]],["title/miscellaneous/variables.html",[164,2.545,528,1.557]],["body/miscellaneous/variables.html",[1,1.932,2,2.15,12,0.668,17,0.826,18,0.039,19,1.281,40,1.753,43,0.031,44,0.031,164,2.771,180,2.158,228,3.429,231,3.228,290,1.568,299,1.738,487,3.228,494,3.228,528,2.43,640,3.921,641,4.851,642,5.267,643,5.267,644,3.921]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":638,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":636,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":323,"title":{},"body":{"classes/CreateAccueilDto.html":{},"injectables/UsersService.html":{}}}],["10.0.0",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["16.4.5",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["1d",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["2.4.3",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":319,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["200",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["3",{"_index":635,"title":{},"body":{"overview.html":{}}}],["3.2.3",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":634,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":347,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["7.8.1",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["8.1.1",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["8.13.0",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["accueil",{"_index":1,"title":{"entities/Accueil.html":{}},"body":{"entities/Accueil.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accueil_id",{"_index":31,"title":{},"body":{"entities/Accueil.html":{}}}],["accueilrepository",{"_index":129,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["accueils",{"_index":50,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["accueils/accueils.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["accueilscontroller",{"_index":46,"title":{"controllers/AccueilsController.html":{}},"body":{"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"coverage.html":{}}}],["accueilsmodule",{"_index":98,"title":{"modules/AccueilsModule.html":{}},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accueilsservice",{"_index":80,"title":{"injectables/AccueilsService.html":{}},"body":{"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"coverage.html":{},"overview.html":{}}}],["adresse",{"_index":360,"title":{},"body":{"classes/SignInDto.html":{}}}],["ajout",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":615,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":407,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('users",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":146,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appels",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["application",{"_index":586,"title":{},"body":{"index.html":{}}}],["applications",{"_index":541,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":148,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["async",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["au",{"_index":317,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["aucun",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":184,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":206,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":151,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":622,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":196,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avec",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":616,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":453,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('cet",{"_index":469,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('la",{"_index":457,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["bcrypt.comparesync(pass",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hashsync(createuserdto.password",{"_index":464,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bigint",{"_index":30,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["board",{"_index":608,"title":{},"body":{"index.html":{}}}],["body",{"_index":71,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["body(new",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["bootstrap",{"_index":103,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":632,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":630,"title":{},"body":{"modules.html":{}}}],["building",{"_index":536,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["caractères",{"_index":320,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["caractères'})@isnotempty({message",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["caractères.'})@isnotempty({message",{"_index":363,"title":{},"body":{"classes/SignInDto.html":{}}}],["catch",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cette",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["chaine",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["champ",{"_index":311,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/SignInDto.html":{}}}],["channel",{"_index":577,"title":{},"body":{"index.html":{}}}],["charger",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["chaîne",{"_index":362,"title":{},"body":{"classes/SignInDto.html":{}}}],["check",{"_index":563,"title":{},"body":{"index.html":{}}}],["cl",{"_index":458,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":42,"title":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":307,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"overview.html":{}}}],["clef",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["club",{"_index":462,"title":{},"body":{"injectables/UsersService.html":{}}}],["cluster_accueilsmodule",{"_index":106,"title":{},"body":{"modules/AccueilsModule.html":{},"overview.html":{}}}],["cluster_accueilsmodule_providers",{"_index":107,"title":{},"body":{"modules/AccueilsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":420,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":421,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":422,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":36,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column({type",{"_index":21,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["come",{"_index":566,"title":{},"body":{"index.html":{}}}],["compte",{"_index":472,"title":{},"body":{"injectables/UsersService.html":{}}}],["concernant",{"_index":424,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["condition",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{}}}],["connexion",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`tentative",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":139,"title":{},"body":{"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructeur",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(accueilrepository",{"_index":126,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["constructor(jwtservice",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":84,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["constructor(userrepository",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["contactez",{"_index":461,"title":{},"body":{"injectables/UsersService.html":{}}}],["contenir",{"_index":316,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["context",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.getclass",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.gethandler",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controleur",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller",{"_index":45,"title":{"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('accueils",{"_index":83,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["controller('auth",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller/auth.controller",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers",{"_index":47,"title":{},"body":{"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers/accueils.controller",{"_index":114,"title":{},"body":{"modules/AccueilsModule.html":{}}}],["courses",{"_index":584,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":477,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createaccueil",{"_index":122,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["createaccueil(createaccueildto",{"_index":130,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["createaccueildto",{"_index":57,"title":{"classes/CreateAccueilDto.html":{}},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"classes/CreateAccueilDto.html":{},"coverage.html":{}}}],["createaccueils",{"_index":52,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["createaccueils(@body",{"_index":93,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["createaccueils(createaccueildto",{"_index":56,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["createuser",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":441,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":332,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.clef",{"_index":455,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":463,"title":{},"body":{"injectables/UsersService.html":{}}}],["création",{"_index":443,"title":{},"body":{"injectables/UsersService.html":{}}}],["d'environnement",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["d'un",{"_index":444,"title":{},"body":{"injectables/UsersService.html":{}}}],["database",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":9,"title":{},"body":{"entities/Accueil.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"injectables/UsersService.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":20,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["decorators/public.decorators",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{}}}],["deeper",{"_index":579,"title":{},"body":{"index.html":{}}}],["default",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":75,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["delete('delete/:id",{"_index":64,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["deleteaccueil",{"_index":53,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["deleteaccueil(@param('id",{"_index":95,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["deleteaccueil(id",{"_index":63,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["deleteaccueilbyid",{"_index":123,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["deleteaccueilbyid(id",{"_index":132,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["dependencies",{"_index":100,"title":{"dependencies.html":{}},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["description",{"_index":7,"title":{},"body":{"entities/Accueil.html":{},"classes/CreateAccueilDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["devtools",{"_index":592,"title":{},"body":{"index.html":{}}}],["discord",{"_index":576,"title":{},"body":{"index.html":{}}}],["dive",{"_index":578,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":478,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doit",{"_index":312,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["dotenv",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["dtos/createuser.dto",{"_index":405,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["du",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["définition",{"_index":8,"title":{},"body":{"entities/Accueil.html":{}}}],["déj",{"_index":471,"title":{},"body":{"injectables/UsersService.html":{}}}],["e2e",{"_index":560,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":537,"title":{},"body":{"index.html":{}}}],["email",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["enregister",{"_index":404,"title":{},"body":{"controllers/UsersController.html":{}}}],["enregistrer",{"_index":401,"title":{},"body":{"controllers/UsersController.html":{}}}],["enterprise",{"_index":597,"title":{},"body":{"index.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Accueil.html":{},"modules/AppModule.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":0,"title":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["est",{"_index":459,"title":{},"body":{"injectables/UsersService.html":{}}}],["example",{"_index":547,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["existinguser",{"_index":467,"title":{},"body":{"injectables/UsersService.html":{}}}],["experience",{"_index":581,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":41,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":105,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"dependencies.html":{}}}],["extracttokenfromheader",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{}}}],["false",{"_index":25,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["few",{"_index":564,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findaccueilbyid",{"_index":54,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["findaccueilbyid(@param('id",{"_index":89,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["findaccueilbyid(id",{"_index":66,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["findallaccueil",{"_index":124,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["findallusers",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{}}}],["follow",{"_index":601,"title":{},"body":{"index.html":{}}}],["framework",{"_index":535,"title":{},"body":{"index.html":{}}}],["full",{"_index":596,"title":{},"body":{"index.html":{}}}],["function",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":529,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gestion",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["get(':id",{"_index":88,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["get()@apioperation({summary",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["getaccueils",{"_index":55,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["getting",{"_index":531,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["global",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{}}}],["graph",{"_index":587,"title":{},"body":{"index.html":{}}}],["grow",{"_index":612,"title":{},"body":{"index.html":{}}}],["guard",{"_index":205,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":207,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hands",{"_index":580,"title":{},"body":{"index.html":{}}}],["handy",{"_index":567,"title":{},"body":{"index.html":{}}}],["help",{"_index":594,"title":{},"body":{"index.html":{}}}],["here",{"_index":620,"title":{},"body":{"index.html":{}}}],["host",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":626,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":14,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["identifier",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":15,"title":{},"body":{"entities/Accueil.html":{},"classes/CreateAccueilDto.html":{}}}],["implements",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{}}}],["import",{"_index":35,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":117,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["incorrect",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["incorrecte",{"_index":460,"title":{},"body":{"injectables/UsersService.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":119,"title":{"injectables/AccueilsService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":120,"title":{},"body":{"injectables/AccueilsService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":136,"title":{},"body":{"injectables/AccueilsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(accueil",{"_index":137,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["injectrepository(user",{"_index":454,"title":{},"body":{"injectables/UsersService.html":{}}}],["installcompile",{"_index":549,"title":{},"body":{"index.html":{}}}],["interact",{"_index":588,"title":{},"body":{"index.html":{}}}],["is_public_key",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isnotempty",{"_index":326,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isnotempty({message",{"_index":309,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/SignInDto.html":{}}}],["ispublic",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":349,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isstring({message",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["job",{"_index":605,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":607,"title":{},"body":{"index.html":{}}}],["join",{"_index":618,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":376,"title":{},"body":{"entities/User.html":{}}}],["jwt",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["jwtmodule",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":623,"title":{},"body":{"index.html":{}}}],["l'email",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["l'ensemble",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["l\\'ensemble",{"_index":417,"title":{},"body":{"controllers/UsersController.html":{}}}],["la",{"_index":10,"title":{},"body":{"entities/Accueil.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/UsersModule.html":{}}}],["le",{"_index":310,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"injectables/UsersService.html":{}}}],["learn",{"_index":571,"title":{},"body":{"index.html":{}}}],["legend",{"_index":101,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["les",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["license",{"_index":629,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":610,"title":{},"body":{"index.html":{}}}],["ligne",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["linkedin",{"_index":603,"title":{},"body":{"index.html":{}}}],["liste",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["local",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["logging",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["looking",{"_index":604,"title":{},"body":{"index.html":{}}}],["loop",{"_index":599,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":375,"title":{},"body":{"entities/User.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":373,"title":{},"body":{"entities/User.html":{}}}],["matching",{"_index":44,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["membres",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["message",{"_index":315,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["metadata",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":51,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":327,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["minlength(10",{"_index":330,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["minlength(20",{"_index":331,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["minlength(6",{"_index":366,"title":{},"body":{"classes/SignInDto.html":{}}}],["minlength(8",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":528,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":609,"title":{},"body":{"index.html":{}}}],["mode",{"_index":553,"title":{},"body":{"index.html":{}}}],["models/typeorm",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":97,"title":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":99,"title":{"modules.html":{}},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moins",{"_index":318,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["more",{"_index":572,"title":{},"body":{"index.html":{}}}],["mot",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["myśliwiec",{"_index":624,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":593,"title":{},"body":{"index.html":{}}}],["nest",{"_index":542,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":628,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":569,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":78,"title":{},"body":{"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":410,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":113,"title":{},"body":{"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newaccueil",{"_index":140,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["newuser",{"_index":465,"title":{},"body":{"injectables/UsersService.html":{}}}],["node.js",{"_index":534,"title":{},"body":{"index.html":{}}}],["nouvel",{"_index":402,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":548,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":24,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["number",{"_index":28,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["number(process.env.db_port",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["offer",{"_index":606,"title":{},"body":{"index.html":{}}}],["official",{"_index":582,"title":{},"body":{"index.html":{}}}],["open",{"_index":611,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ou",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["out",{"_index":110,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":633,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":499,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["par",{"_index":451,"title":{},"body":{"injectables/UsersService.html":{}}}],["param",{"_index":72,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["parameters",{"_index":60,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":73,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["part",{"_index":595,"title":{},"body":{"index.html":{}}}],["partie",{"_index":426,"title":{},"body":{"modules/UsersModule.html":{}}}],["pass",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["passe",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["passport",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"entities/User.html":{}}}],["payload",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["pg",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":575,"title":{},"body":{"index.html":{}}}],["port",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["possède",{"_index":470,"title":{},"body":{"injectables/UsersService.html":{}}}],["post",{"_index":74,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('create",{"_index":91,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["post('create')@usepipes(validationpipe",{"_index":58,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["post('register",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('signin",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["pour",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":49,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":37,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn({type",{"_index":29,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["private",{"_index":138,"title":{},"body":{"injectables/AccueilsService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["process.env.clef",{"_index":456,"title":{},"body":{"injectables/UsersService.html":{}}}],["process.env.db_host",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_secret",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["process.env.node_env",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":555,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":533,"title":{},"body":{"index.html":{}}}],["project",{"_index":545,"title":{},"body":{"index.html":{}}}],["promise",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"entities/Accueil.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"properties.html":{}}}],["provide",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":104,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":40,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get",{"_index":69,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["public()@get(':id",{"_index":67,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["public()@httpcode(httpstatus.ok)@post('signin",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register')@apioperation({summary",{"_index":399,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":573,"title":{},"body":{"index.html":{}}}],["qui",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["read",{"_index":619,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":85,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":589,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{}}}],["register",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{}}}],["registeruser",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["registeruser(@body",{"_index":415,"title":{},"body":{"controllers/UsersController.html":{}}}],["registeruser(createuserdto",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["relations",{"_index":475,"title":{},"body":{"injectables/UsersService.html":{}}}],["renseign",{"_index":329,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["renseigné'})@isemail",{"_index":342,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["renseigné'})@minlength(8",{"_index":346,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["renseigné.'})@isemail",{"_index":359,"title":{},"body":{"classes/SignInDto.html":{}}}],["renseigné.'})@minlength(10",{"_index":322,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["renseigné.'})@minlength(20",{"_index":314,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["renseigné.'})@minlength(6",{"_index":364,"title":{},"body":{"classes/SignInDto.html":{}}}],["renseignée",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["repository",{"_index":127,"title":{},"body":{"injectables/AccueilsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["request",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":109,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":565,"title":{},"body":{"index.html":{}}}],["results",{"_index":43,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":86,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":62,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":299,"title":{"entities/Role.html":{}},"body":{"injectables/AuthService.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":377,"title":{},"body":{"entities/User.html":{}}}],["role_id",{"_index":354,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["role_name",{"_index":356,"title":{},"body":{"entities/Role.html":{}}}],["rolename",{"_index":353,"title":{},"body":{"entities/Role.html":{}}}],["route",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["run",{"_index":550,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["récupère",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["récupération",{"_index":446,"title":{},"body":{"injectables/UsersService.html":{}}}],["récupérer",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["scalable",{"_index":538,"title":{},"body":{"index.html":{}}}],["schema",{"_index":39,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["secret",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["server",{"_index":539,"title":{},"body":{"index.html":{}}}],["service",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["services/accueils.service",{"_index":115,"title":{},"body":{"modules/AccueilsModule.html":{}}}],["services/auth.service",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["services/users.service",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["setmetadata(is_public_key",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":546,"title":{},"body":{"index.html":{}}}],["side",{"_index":540,"title":{},"body":{"index.html":{}}}],["signin",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(email",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(signindto",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":190,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signindto.password",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{}}}],["son",{"_index":452,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":614,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorators.ts",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.ts",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/accueils/accueils.module.ts",{"_index":111,"title":{},"body":{"modules/AccueilsModule.html":{}}}],["src/accueils/controllers/accueils.controller.ts",{"_index":48,"title":{},"body":{"controllers/AccueilsController.html":{},"coverage.html":{}}}],["src/accueils/controllers/accueils.controller.ts:21",{"_index":70,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/controllers/accueils.controller.ts:27",{"_index":68,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/controllers/accueils.controller.ts:33",{"_index":59,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/controllers/accueils.controller.ts:38",{"_index":65,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/dtos/accueil.dtos",{"_index":79,"title":{},"body":{"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{}}}],["src/accueils/dtos/accueil.dtos.ts",{"_index":308,"title":{},"body":{"classes/CreateAccueilDto.html":{},"coverage.html":{}}}],["src/accueils/dtos/accueil.dtos.ts:14",{"_index":321,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["src/accueils/dtos/accueil.dtos.ts:20",{"_index":324,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["src/accueils/dtos/accueil.dtos.ts:8",{"_index":325,"title":{},"body":{"classes/CreateAccueilDto.html":{}}}],["src/accueils/services/accueils.service",{"_index":81,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["src/accueils/services/accueils.service.ts",{"_index":121,"title":{},"body":{"injectables/AccueilsService.html":{},"coverage.html":{}}}],["src/accueils/services/accueils.service.ts:14",{"_index":131,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/accueils/services/accueils.service.ts:19",{"_index":135,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/accueils/services/accueils.service.ts:23",{"_index":134,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/accueils/services/accueils.service.ts:29",{"_index":133,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/accueils/services/accueils.service.ts:8",{"_index":128,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["src/app.controller.ts",{"_index":147,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.guard.ts",{"_index":208,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:16",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:22",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:49",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/controller/auth.controller.ts",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controller/auth.controller.ts:20",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/decorators/public.decorators",{"_index":82,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorators/public.decorators.ts",{"_index":487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/signin.dto",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/dtos/signin.dto.ts",{"_index":358,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dtos/signin.dto.ts:15",{"_index":365,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dtos/signin.dto.ts:6",{"_index":361,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/services/auth.service.ts",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/services/auth.service.ts:13",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/services/auth.service.ts:7",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":490,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/accueil.entity",{"_index":116,"title":{},"body":{"modules/AccueilsModule.html":{},"injectables/AccueilsService.html":{}}}],["src/models/accueil.entity.ts",{"_index":6,"title":{},"body":{"entities/Accueil.html":{},"coverage.html":{}}}],["src/models/accueil.entity.ts:12",{"_index":32,"title":{},"body":{"entities/Accueil.html":{}}}],["src/models/accueil.entity.ts:19",{"_index":34,"title":{},"body":{"entities/Accueil.html":{}}}],["src/models/accueil.entity.ts:26",{"_index":27,"title":{},"body":{"entities/Accueil.html":{}}}],["src/models/accueil.entity.ts:33",{"_index":33,"title":{},"body":{"entities/Accueil.html":{}}}],["src/models/role.entity.ts",{"_index":352,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/models/role.entity.ts:11",{"_index":355,"title":{},"body":{"entities/Role.html":{}}}],["src/models/role.entity.ts:18",{"_index":357,"title":{},"body":{"entities/Role.html":{}}}],["src/models/typeorm.ts",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/user.entity",{"_index":428,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/models/user.entity.ts",{"_index":367,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/models/user.entity.ts:17",{"_index":371,"title":{},"body":{"entities/User.html":{}}}],["src/models/user.entity.ts:25",{"_index":369,"title":{},"body":{"entities/User.html":{}}}],["src/models/user.entity.ts:32",{"_index":372,"title":{},"body":{"entities/User.html":{}}}],["src/models/user.entity.ts:36",{"_index":374,"title":{},"body":{"entities/User.html":{}}}],["src/users/dtos/createuser.dto.ts",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/createuser.dto.ts:13",{"_index":348,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:19",{"_index":341,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:6",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/services/users.service",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/services/users.service.ts",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/services/users.service.ts:10",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:18",{"_index":442,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:33",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/services/users.service.ts:41",{"_index":445,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:21",{"_index":403,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:35",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":423,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":551,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":554,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":556,"title":{},"body":{"index.html":{}}}],["started",{"_index":532,"title":{"index.html":{}},"body":{}}],["starter",{"_index":544,"title":{},"body":{"index.html":{}}}],["statements",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":418,"title":{},"body":{"controllers/UsersController.html":{}}}],["stay",{"_index":598,"title":{},"body":{"index.html":{}}}],["string",{"_index":19,"title":{},"body":{"entities/Accueil.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["summary",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{}}}],["support",{"_index":574,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":631,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["tablle",{"_index":11,"title":{},"body":{"entities/Accueil.html":{}}}],["test",{"_index":559,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":562,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":561,"title":{},"body":{"index.html":{}}}],["tests",{"_index":557,"title":{},"body":{"index.html":{}}}],["text",{"_index":22,"title":{},"body":{"entities/Accueil.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["thanks",{"_index":613,"title":{},"body":{"index.html":{}}}],["this.accueilrepository.create(createaccueildto",{"_index":141,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilrepository.delete(id",{"_index":145,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilrepository.find",{"_index":143,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilrepository.findone",{"_index":144,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilrepository.save(newaccueil",{"_index":142,"title":{},"body":{"injectables/AccueilsService.html":{}}}],["this.accueilsservice.createaccueil(createaccueildto",{"_index":94,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["this.accueilsservice.deleteaccueilbyid(id",{"_index":96,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["this.accueilsservice.findaccueilbyid(id",{"_index":90,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["this.accueilsservice.findallaccueil",{"_index":87,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["this.authservice.signin(signindto.email",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.extracttokenfromheader(request",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.findonebyemail(createuserdto.email",{"_index":468,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.userrepository.create(createuserdto",{"_index":466,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":476,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":474,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(newuser",{"_index":473,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":416,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findallusers",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":590,"title":{},"body":{"index.html":{}}}],["titre",{"_index":16,"title":{},"body":{"entities/Accueil.html":{},"classes/CreateAccueilDto.html":{}}}],["token",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["touch",{"_index":621,"title":{},"body":{"index.html":{}}}],["tout",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["toute",{"_index":425,"title":{},"body":{"modules/UsersModule.html":{}}}],["transformer",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["tre",{"_index":313,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["true",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{}}}],["twitter",{"_index":627,"title":{},"body":{"index.html":{}}}],["type",{"_index":17,"title":{},"body":{"entities/Accueil.html":{},"controllers/AccueilsController.html":{},"injectables/AccueilsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"entities/Role.html":{},"classes/SignInDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":38,"title":{},"body":{"entities/Accueil.html":{},"injectables/AccueilsService.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":112,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([accueil",{"_index":118,"title":{},"body":{"modules/AccueilsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":429,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":543,"title":{},"body":{"index.html":{}}}],["un",{"_index":343,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["unauthorizedexception('email",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{}}}],["une",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["unique",{"_index":368,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":558,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":639,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":600,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{}}}],["usepipes",{"_index":76,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["usepipes(validationpipe",{"_index":92,"title":{},"body":{"controllers/AccueilsController.html":{}}}],["user",{"_index":290,"title":{"entities/User.html":{}},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.role?.rolename",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":370,"title":{},"body":{"entities/User.html":{}}}],["username",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":440,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":427,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":378,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":152,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":272,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":591,"title":{},"body":{"index.html":{}}}],["utilisateur",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["utilisateurs",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["utilisateurs'})@apiresponse({status",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["validation",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validationpipe",{"_index":77,"title":{},"body":{"controllers/AccueilsController.html":{},"controllers/AuthController.html":{}}}],["validator",{"_index":328,"title":{},"body":{"classes/CreateAccueilDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["valide",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["value",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":164,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":637,"title":{},"body":{"properties.html":{}}}],["video",{"_index":583,"title":{},"body":{"index.html":{}}}],["visit",{"_index":570,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":585,"title":{},"body":{"index.html":{}}}],["voir",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{}}}],["watch",{"_index":552,"title":{},"body":{"index.html":{}}}],["website",{"_index":625,"title":{},"body":{"index.html":{}}}],["working",{"_index":568,"title":{},"body":{"index.html":{}}}],["x",{"_index":602,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":617,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":108,"title":{},"body":{"modules/AccueilsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Accueil.html":{"url":"entities/Accueil.html","title":"entity - Accueil","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Accueil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/accueil.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Définition de la tablle Accueil\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                titre\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'description', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/accueil.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'bigint', name: 'accueil_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/accueil.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'image', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/accueil.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'titre', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/accueil.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/** Définition de la tablle Accueil */\n@Entity({\n  schema: 'public',\n})\nexport class Accueil {\n  @PrimaryGeneratedColumn({\n    type: 'bigint',\n    name: 'accueil_id',\n  })\n  id: number;\n\n  @Column({\n    type: 'text',\n    name: 'titre',\n    nullable: false,\n  })\n  titre: string;\n\n  @Column({\n    type: 'text',\n    name: 'description',\n    nullable: false,\n  })\n  description: string;\n\n  @Column({\n    type: 'text',\n    name: 'image',\n    nullable: false,\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccueilsController.html":{"url":"controllers/AccueilsController.html","title":"controller - AccueilsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccueilsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accueils/controllers/accueils.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                accueils\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createAccueils\n                            \n                            \n                                    \n                                deleteAccueil\n                            \n                            \n                                    \n                                    \n                                findAccueilById\n                            \n                            \n                                    \n                                    \n                                getAccueils\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createAccueils\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccueils(createAccueilDto: CreateAccueilDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@UsePipes(ValidationPipe)\n                \n            \n\n                    \n                        \n                            Defined in src/accueils/controllers/accueils.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAccueilDto\n                                            \n                                                            CreateAccueilDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAccueil\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAccueil(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/accueils/controllers/accueils.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAccueilById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAccueilById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/accueils/controllers/accueils.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getAccueils\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccueils()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/accueils/controllers/accueils.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseIntPipe,\n  Post,\n  Delete,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateAccueilDto } from 'src/accueils/dtos/accueil.dtos';\nimport { AccueilsService } from 'src/accueils/services/accueils.service';\nimport { Public } from 'src/auth/decorators/public.decorators';\n@Controller('accueils')\nexport class AccueilsController {\n  constructor(private readonly accueilsService: AccueilsService) {}\n\n  @Public()\n  @Get()\n  getAccueils() {\n    return this.accueilsService.findAllAccueil();\n  }\n\n  @Public()\n  @Get(':id')\n  findAccueilById(@Param('id', ParseIntPipe) id: number) {\n    return this.accueilsService.findAccueilById(id);\n  }\n\n  @Post('create')\n  @UsePipes(ValidationPipe)\n  createAccueils(@Body() createAccueilDto: CreateAccueilDto) {\n    return this.accueilsService.createAccueil(createAccueilDto);\n  }\n\n  @Delete('delete/:id')\n  deleteAccueil(@Param('id', ParseIntPipe) id: number) {\n    return this.accueilsService.deleteAccueilById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccueilsModule.html":{"url":"modules/AccueilsModule.html","title":"module - AccueilsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccueilsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccueilsModule\n\n\n\ncluster_AccueilsModule_providers\n\n\n\n\nAccueilsService\n\nAccueilsService\n\n\n\nAccueilsModule\n\nAccueilsModule\n\nAccueilsModule -->\n\nAccueilsService->AccueilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accueils/accueils.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccueilsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccueilsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccueilsController } from './controllers/accueils.controller';\nimport { AccueilsService } from './services/accueils.service';\nimport { Accueil } from 'src/models/accueil.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Accueil])],\n  controllers: [AccueilsController],\n  providers: [AccueilsService],\n})\nexport class AccueilsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccueilsService.html":{"url":"injectables/AccueilsService.html","title":"injectable - AccueilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccueilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accueils/services/accueils.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAccueil\n                            \n                            \n                                deleteAccueilById\n                            \n                            \n                                findAccueilById\n                            \n                            \n                                findAllAccueil\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accueilRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accueils/services/accueils.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accueilRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAccueil\n                        \n                    \n                \n            \n            \n                \ncreateAccueil(createAccueilDto: CreateAccueilDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accueils/services/accueils.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAccueilDto\n                                            \n                                                            CreateAccueilDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAccueilById\n                        \n                    \n                \n            \n            \n                \ndeleteAccueilById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accueils/services/accueils.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAccueilById\n                        \n                    \n                \n            \n            \n                \nfindAccueilById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accueils/services/accueils.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllAccueil\n                        \n                    \n                \n            \n            \n                \nfindAllAccueil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/accueils/services/accueils.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Accueil } from 'src/models/accueil.entity';\nimport { Repository } from 'typeorm';\nimport { CreateAccueilDto } from 'src/accueils/dtos/accueil.dtos';\n\n@Injectable()\nexport class AccueilsService {\n  constructor(\n    @InjectRepository(Accueil)\n    private readonly accueilRepository: Repository,\n  ) {}\n\n  createAccueil(createAccueilDto: CreateAccueilDto) {\n    const newAccueil = this.accueilRepository.create(createAccueilDto);\n    return this.accueilRepository.save(newAccueil);\n  }\n\n  findAllAccueil() {\n    return this.accueilRepository.find();\n  }\n\n  findAccueilById(id: number) {\n    return this.accueilRepository.findOne({\n      where: { id: id },\n    });\n  }\n\n  deleteAccueilById(id: number) {\n    return this.accueilRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { Public } from 'src/auth/decorators/public.decorators';\n\n@Controller()\nexport class AppController {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAccueilsModule\n\nAccueilsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccueilsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccueilsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccueilsModule } from './accueils/accueils.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport entities from './models/typeorm';\nimport * as dotenv from 'dotenv';\n\n// Charger les variables d'environnement\ndotenv.config();\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST,\n      port: Number(process.env.DB_PORT),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      entities: entities,\n      synchronize: true,\n      logging: process.env.NODE_ENV === 'development',\n    }),\n    AccueilsModule,\n    UsersModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controller/auth.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  HttpCode,\n  HttpStatus,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { AuthService } from '../services/auth.service';\nimport { SignInDto } from 'src/auth/dtos/signin.dto';\nimport { Public } from 'src/auth/decorators/public.decorators';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('signin')\n  async signIn(\n    @Body(new ValidationPipe())\n    signInDto: SignInDto,\n  ) {\n    return this.authService.signIn(signInDto.email, signInDto.password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport * as dotenv from 'dotenv';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from './decorators/public.decorators';\n\ndotenv.config();\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly jwtService: JwtService,\n    private reflector: Reflector,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      // 💡 Voir cette condition\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: process.env.JWT_SECRET,\n      });\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './services/auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './controller/auth.controller';\nimport { AuthGuard } from './auth.guard';\nimport * as dotenv from 'dotenv';\nimport { APP_GUARD } from '@nestjs/core';\ndotenv.config();\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.register({\n      global: true,\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '1d' },\n    }),\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from 'src/users/services/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcryptjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async signIn(email: string, pass: string): Promise {\n    console.log(`Tentative de connexion avec l'email: ${email} ${pass}`); // Ajout du console.log à la ligne 14 //\n    const user = await this.usersService.findOneByEmail(email);\n    if (!user || !bcrypt.compareSync(pass, user.password)) {\n      throw new UnauthorizedException('Email ou mot de passe incorrect');\n    }\n\n    const role = user?.role?.roleName ?? 'aucun';\n\n    const payload = {\n      sub: user.id,\n      email: user.email,\n      role: role,\n    };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccueilDto.html":{"url":"classes/CreateAccueilDto.html","title":"class - CreateAccueilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccueilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accueils/dtos/accueil.dtos.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                titre\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Le champ titre doit être renseigné.'})@MinLength(20, {message: 'Le champ titre doit contenir au moins 20 caractères.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accueils/dtos/accueil.dtos.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Le champ image doit être renseigné.'})@MinLength(10, {message: 'Le champ image doit contenir au moins 10 caractères.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accueils/dtos/accueil.dtos.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Le champ titre doit être renseigné.'})@MinLength(10, {message: 'Le champ titre doit contenir au moins 10 caractères.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accueils/dtos/accueil.dtos.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MinLength } from 'class-validator';\n\nexport class CreateAccueilDto {\n  @IsNotEmpty({ message: 'Le champ titre doit être renseigné.' })\n  @MinLength(10, {\n    message: 'Le champ titre doit contenir au moins 10 caractères.',\n  })\n  titre: string;\n\n  @IsNotEmpty({ message: 'Le champ titre doit être renseigné.' })\n  @MinLength(20, {\n    message: 'Le champ titre doit contenir au moins 20 caractères.',\n  })\n  description: string;\n\n  @IsNotEmpty({ message: 'Le champ image doit être renseigné.' })\n  @MinLength(10, {\n    message: 'Le champ image doit contenir au moins 10 caractères.',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/createuser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                clef\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Le clef de validation doit être une chaine de caractères'})@IsNotEmpty({message: 'La clef de validation doit être renseignée'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createuser.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'L'email doit être une chaine de caractères'})@IsNotEmpty({message: 'L'email doit être renseigné'})@IsEmail({}, {message: 'L'email doit être un email valide'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createuser.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Le mot de passe doit être une chaine de caractères'})@IsNotEmpty({message: 'Le mot de passe doit être renseigné'})@MinLength(8, {message: 'Le mot de passe doit contenir au moins 6 caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createuser.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, MinLength, IsEmail } from 'class-validator';\nexport class CreateUserDto {\n  @IsString({ message: \"L'email doit être une chaine de caractères\" })\n  @IsNotEmpty({ message: \"L'email doit être renseigné\" })\n  @IsEmail({}, { message: \"L'email doit être un email valide\" })\n  email: string;\n\n  @IsString({ message: 'Le mot de passe doit être une chaine de caractères' })\n  @IsNotEmpty({ message: 'Le mot de passe doit être renseigné' })\n  @MinLength(8, {\n    message: 'Le mot de passe doit contenir au moins 6 caractères',\n  })\n  password: string;\n\n  @IsString({\n    message: 'Le clef de validation doit être une chaine de caractères',\n  })\n  @IsNotEmpty({ message: 'La clef de validation doit être renseignée' })\n  clef: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                roleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'bigint', name: 'role_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/role.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'role_name', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/role.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  schema: 'public',\n})\nexport class Role {\n  @PrimaryGeneratedColumn({\n    type: 'bigint',\n    name: 'role_id',\n  })\n  id: number;\n\n  @Column({\n    type: 'text',\n    name: 'role_name',\n    nullable: false,\n  })\n  roleName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/signin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Le champ email doit être renseigné.'})@IsEmail({}, {message: 'Le champ email doit être une adresse email.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Le champ mot de passe doit être une chaîne de caractères.'})@IsNotEmpty({message: 'Le champ mot de passe doit être renseigné.'})@MinLength(6, {message: 'Le champ mot de passe doit contenir au moins 6 caractères.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/signin.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty, MinLength, IsEmail } from 'class-validator';\n\nexport class SignInDto {\n  @IsNotEmpty({ message: 'Le champ email doit être renseigné.' })\n  @IsEmail({}, { message: 'Le champ email doit être une adresse email.' })\n  email: string;\n\n  @IsString({\n    message: 'Le champ mot de passe doit être une chaîne de caractères.',\n  })\n  @IsNotEmpty({ message: 'Le champ mot de passe doit être renseigné.' })\n  @MinLength(6, {\n    message: 'Le champ mot de passe doit contenir au moins 6 caractères.',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'email', unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({type: 'bigint', name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'password', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'role_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { Role } from './role.entity';\n@Entity({\n  schema: 'public',\n})\nexport class User {\n  @PrimaryGeneratedColumn({\n    type: 'bigint',\n    name: 'user_id',\n  })\n  id: number;\n\n  @Column({\n    type: 'text',\n    name: 'email',\n    unique: true,\n    nullable: false,\n  })\n  email: string;\n\n  @Column({\n    type: 'text',\n    name: 'password',\n    nullable: false,\n  })\n  password: string;\n\n  @ManyToOne(() => Role)\n  @JoinColumn({ name: 'role_id' })\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n            \n                Description\n            \n            \n                Controleur pour les Users (membres)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Récupérer tout les utilisateur', description: 'Récupérer l'ensemble des utilisateurs'})@ApiResponse({status: 200, description: 'Liste des utilisateurs'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:35\n                        \n                    \n\n\n            \n                \n                        Route pour récupérer l'ensemble des utilisateurs\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ApiOperation({summary: 'Register a new user', description: 'Enregistrer un nouvel utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:21\n                        \n                    \n\n\n            \n                \n                        Route pour enregister un nouvel utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Get } from '@nestjs/common';\nimport { CreateUserDto } from './dtos/createuser.dto';\nimport { UsersService } from './services/users.service';\nimport { Public } from 'src/auth/decorators/public.decorators';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n\n/** Controleur pour les Users (membres) */\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  /** Route pour enregister un nouvel utilisateur */\n  @Public()\n  @Post('register')\n  @ApiOperation({\n    summary: 'Register a new user',\n    description: 'Enregistrer un nouvel utilisateur',\n  })\n  registerUser(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.createUser(createUserDto);\n  }\n\n  /** Route pour récupérer l'ensemble des utilisateurs */\n  @Get()\n  @ApiOperation({\n    summary: 'Récupérer tout les utilisateur',\n    description: 'Récupérer l\\'ensemble des utilisateurs',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Liste des utilisateurs',\n  })\n  getUsers() {\n    return this.usersService.findAllUsers();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module concernant toute la partie User\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './services/users.service';\nimport { User } from 'src/models/user.entity';\n\n/** Module concernant toute la partie User */\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/services/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service de gestion des appels concernant les utilisateurs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                findAllUsers\n                            \n                            \n                                findOneByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/services/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructeur\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Service de création d'un utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \nfindAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Service de récupération de tout les utilisateurs\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \nfindOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/services/users.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Service qui récupère un utilisateur par son email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from 'src/models/user.entity';\nimport { Repository } from 'typeorm';\nimport { CreateUserDto } from '../dtos/createuser.dto';\nimport * as bcrypt from 'bcryptjs';\n\n/** Service de gestion des appels concernant les utilisateurs */\n@Injectable()\nexport class UsersService {\n  /** Constructeur */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {}\n\n  /** Service de création d'un utilisateur */\n  async createUser(createUserDto: CreateUserDto) {\n    if (createUserDto.clef !== process.env.CLEF) {\n      throw new BadRequestException('La clé est incorrecte, contactez le club');\n    }\n    createUserDto.password = bcrypt.hashSync(createUserDto.password, 10);\n    const newUser = this.userRepository.create(createUserDto);\n    const existingUser = await this.findOneByEmail(createUserDto.email);\n    if (existingUser) {\n      throw new BadRequestException('Cet email possède déjà un compte');\n    }\n\n    return this.userRepository.save(newUser);\n  }\n\n  /** Service qui récupère un utilisateur par son email */\n  findOneByEmail(email: string): Promise {\n    return this.userRepository.findOne({\n      where: { email },\n      relations: ['role'],\n    });\n  }\n\n  /** Service de récupération de tout les utilisateurs */\n  findAllUsers() {\n    return this.userRepository.find({ relations: ['role'] });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/accueils/controllers/accueils.controller.ts\n            \n            controller\n            AccueilsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/accueils/dtos/accueil.dtos.ts\n            \n            class\n            CreateAccueilDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/accueils/services/accueils.service.ts\n            \n            injectable\n            AccueilsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/auth/decorators/public.decorators.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/public.decorators.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/signin.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/accueil.entity.ts\n            \n            entity\n            Accueil\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/models/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/models/typeorm.ts\n            \n            variable\n            entities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/createuser.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^8.1.1\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.5\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.13.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccueilsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccueilsModule\n\n\n\ncluster_AccueilsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAccueilsService\n\nAccueilsService\n\n\n\nAccueilsModule\n\nAccueilsModule\n\nAccueilsModule -->\n\nAccueilsService->AccueilsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccueilsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            entities   (src/.../typeorm.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorators.ts)\n                        \n                        \n                            Public   (src/.../public.decorators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/typeorm.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Accueil, User, Role]\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/public.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
